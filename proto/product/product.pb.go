// Code generated by protoc-gen-go. DO NOT EDIT.
// source: product.proto

package product // import "j7go/proto/product"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 商品类型
type ProductType int32

const (
	ProductType_PRODUCT_INIT ProductType = 0
	// 会员卡
	ProductType_PRODUCT_MEMBER_CARD ProductType = 1
	// 储值卡
	ProductType_PRODUCT_DEPOSIT_CARD ProductType = 2
	// 私教课
	ProductType_PRODUCT_PERSONAL_COURSE ProductType = 3
	// 团体课
	ProductType_PRODUCT_TEAM_COURSE ProductType = 4
)

var ProductType_name = map[int32]string{
	0: "PRODUCT_INIT",
	1: "PRODUCT_MEMBER_CARD",
	2: "PRODUCT_DEPOSIT_CARD",
	3: "PRODUCT_PERSONAL_COURSE",
	4: "PRODUCT_TEAM_COURSE",
}
var ProductType_value = map[string]int32{
	"PRODUCT_INIT":            0,
	"PRODUCT_MEMBER_CARD":     1,
	"PRODUCT_DEPOSIT_CARD":    2,
	"PRODUCT_PERSONAL_COURSE": 3,
	"PRODUCT_TEAM_COURSE":     4,
}

func (x ProductType) String() string {
	return proto.EnumName(ProductType_name, int32(x))
}
func (ProductType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{0}
}

// 支持售卖场馆类型
type SupportSales int32

const (
	SupportSales_SUPPORT_SALES_INIT SupportSales = 0
	// 全部场馆
	SupportSales_SALES_ALL SupportSales = 1
	// 指定场馆
	SupportSales_SALES_PART SupportSales = 2
)

var SupportSales_name = map[int32]string{
	0: "SUPPORT_SALES_INIT",
	1: "SALES_ALL",
	2: "SALES_PART",
}
var SupportSales_value = map[string]int32{
	"SUPPORT_SALES_INIT": 0,
	"SALES_ALL":          1,
	"SALES_PART":         2,
}

func (x SupportSales) String() string {
	return proto.EnumName(SupportSales_name, int32(x))
}
func (SupportSales) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{1}
}

// 发布渠道
type PublishChannel int32

const (
	PublishChannel_PUBLISH_CHANNEL_INIT PublishChannel = 0
	// 品牌
	PublishChannel_CHANNEL_BRAND PublishChannel = 1
	// 门店
	PublishChannel_CHANNEL_SHOP PublishChannel = 2
)

var PublishChannel_name = map[int32]string{
	0: "PUBLISH_CHANNEL_INIT",
	1: "CHANNEL_BRAND",
	2: "CHANNEL_SHOP",
}
var PublishChannel_value = map[string]int32{
	"PUBLISH_CHANNEL_INIT": 0,
	"CHANNEL_BRAND":        1,
	"CHANNEL_SHOP":         2,
}

func (x PublishChannel) String() string {
	return proto.EnumName(PublishChannel_name, int32(x))
}
func (PublishChannel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{2}
}

// 上架状态
type ShelfStatus int32

const (
	ShelfStatus_SHELFSTATUS_INIT ShelfStatus = 0
	// 下架
	ShelfStatus_SHELFSTATUS_DOWN ShelfStatus = 1
	// 上架
	ShelfStatus_SHELFSTATUS_UP ShelfStatus = 2
)

var ShelfStatus_name = map[int32]string{
	0: "SHELFSTATUS_INIT",
	1: "SHELFSTATUS_DOWN",
	2: "SHELFSTATUS_UP",
}
var ShelfStatus_value = map[string]int32{
	"SHELFSTATUS_INIT": 0,
	"SHELFSTATUS_DOWN": 1,
	"SHELFSTATUS_UP":   2,
}

func (x ShelfStatus) String() string {
	return proto.EnumName(ShelfStatus_name, int32(x))
}
func (ShelfStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{3}
}

// 售卖状态
type ProductSellStatus int32

const (
	ProductSellStatus_PRODUCT_SELL_STATUS_INIT ProductSellStatus = 0
	// 可售卖
	ProductSellStatus_PRODUCT_SELL_STATUS_AVAILABLE ProductSellStatus = 1
	// 不可售卖
	ProductSellStatus_PRODUCT_SELL_STATUS_UNAVAILABLE ProductSellStatus = 2
)

var ProductSellStatus_name = map[int32]string{
	0: "PRODUCT_SELL_STATUS_INIT",
	1: "PRODUCT_SELL_STATUS_AVAILABLE",
	2: "PRODUCT_SELL_STATUS_UNAVAILABLE",
}
var ProductSellStatus_value = map[string]int32{
	"PRODUCT_SELL_STATUS_INIT":        0,
	"PRODUCT_SELL_STATUS_AVAILABLE":   1,
	"PRODUCT_SELL_STATUS_UNAVAILABLE": 2,
}

func (x ProductSellStatus) String() string {
	return proto.EnumName(ProductSellStatus_name, int32(x))
}
func (ProductSellStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{4}
}

// 售卖渠道
type CardSellType int32

const (
	CardSellType_CARD_SELL_TYPE_INIT CardSellType = 0
	// 用户端
	CardSellType_CARD_SELL_TYPE_APP CardSellType = 1
	// 线下
	CardSellType_CARD_SELL_TYPE_OFFLINE CardSellType = 2
	// 全部
	CardSellType_CARD_SELL_TYPE_ALL CardSellType = 3
)

var CardSellType_name = map[int32]string{
	0: "CARD_SELL_TYPE_INIT",
	1: "CARD_SELL_TYPE_APP",
	2: "CARD_SELL_TYPE_OFFLINE",
	3: "CARD_SELL_TYPE_ALL",
}
var CardSellType_value = map[string]int32{
	"CARD_SELL_TYPE_INIT":    0,
	"CARD_SELL_TYPE_APP":     1,
	"CARD_SELL_TYPE_OFFLINE": 2,
	"CARD_SELL_TYPE_ALL":     3,
}

func (x CardSellType) String() string {
	return proto.EnumName(CardSellType_name, int32(x))
}
func (CardSellType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{5}
}

// 设置价格方式
type SetPriceType int32

const (
	SetPriceType_SET_PRICE_TYPE_INIT SetPriceType = 0
	// 品牌统一定价
	SetPriceType_SET_PRICE_TYPE_BRAND SetPriceType = 1
	// 门店自定义
	SetPriceType_SET_PRICE_TYPE_SHOP SetPriceType = 2
)

var SetPriceType_name = map[int32]string{
	0: "SET_PRICE_TYPE_INIT",
	1: "SET_PRICE_TYPE_BRAND",
	2: "SET_PRICE_TYPE_SHOP",
}
var SetPriceType_value = map[string]int32{
	"SET_PRICE_TYPE_INIT":  0,
	"SET_PRICE_TYPE_BRAND": 1,
	"SET_PRICE_TYPE_SHOP":  2,
}

func (x SetPriceType) String() string {
	return proto.EnumName(SetPriceType_name, int32(x))
}
func (SetPriceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{6}
}

// 卡操作类型  操作类型 1创建 2编辑 3上架 4下架 5停售 6恢复售卖 7待定
type OperateType int32

const (
	OperateType_OPERATE_CARD_INIT         OperateType = 0
	OperateType_OPERATE_CARD_CREATE       OperateType = 1
	OperateType_OPERATE_CARD_UPDATE       OperateType = 2
	OperateType_OPERATE_CARD_ONLINE       OperateType = 3
	OperateType_OPERATE_CARD_OFFLINE      OperateType = 4
	OperateType_OPERATE_CARD_STOP_SELL    OperateType = 5
	OperateType_OPERATE_CARD_RESTART_SELL OperateType = 6
	OperateType_OPERATE_CARD_OTHER        OperateType = 7
)

var OperateType_name = map[int32]string{
	0: "OPERATE_CARD_INIT",
	1: "OPERATE_CARD_CREATE",
	2: "OPERATE_CARD_UPDATE",
	3: "OPERATE_CARD_ONLINE",
	4: "OPERATE_CARD_OFFLINE",
	5: "OPERATE_CARD_STOP_SELL",
	6: "OPERATE_CARD_RESTART_SELL",
	7: "OPERATE_CARD_OTHER",
}
var OperateType_value = map[string]int32{
	"OPERATE_CARD_INIT":         0,
	"OPERATE_CARD_CREATE":       1,
	"OPERATE_CARD_UPDATE":       2,
	"OPERATE_CARD_ONLINE":       3,
	"OPERATE_CARD_OFFLINE":      4,
	"OPERATE_CARD_STOP_SELL":    5,
	"OPERATE_CARD_RESTART_SELL": 6,
	"OPERATE_CARD_OTHER":        7,
}

func (x OperateType) String() string {
	return proto.EnumName(OperateType_name, int32(x))
}
func (OperateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{7}
}

// 开卡方式
type OpenType int32

const (
	//
	OpenType_USE_TYPE_INIT OpenType = 0
	// 购买即开卡
	OpenType_USE_RIGHT_NOW OpenType = 1
	// 到店开卡
	OpenType_USE_BY_SHOP OpenType = 2
	// 指定日期开卡
	OpenType_USE_BY_SPECIAL_DATE OpenType = 3
)

var OpenType_name = map[int32]string{
	0: "USE_TYPE_INIT",
	1: "USE_RIGHT_NOW",
	2: "USE_BY_SHOP",
	3: "USE_BY_SPECIAL_DATE",
}
var OpenType_value = map[string]int32{
	"USE_TYPE_INIT":       0,
	"USE_RIGHT_NOW":       1,
	"USE_BY_SHOP":         2,
	"USE_BY_SPECIAL_DATE": 3,
}

func (x OpenType) String() string {
	return proto.EnumName(OpenType_name, int32(x))
}
func (OpenType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{8}
}

// 售卖方式
type SaleMode int32

const (
	// 枚举初始值, 无意义
	SaleMode_SALE_INIT SaleMode = 0
	// 用户端售卖
	SaleMode_USER_SIDE_SALE SaleMode = 1
	// 线下售卖
	SaleMode_OFFLINE_SALE SaleMode = 2
	// 所有售卖方式
	SaleMode_ALL_SALE SaleMode = 3
)

var SaleMode_name = map[int32]string{
	0: "SALE_INIT",
	1: "USER_SIDE_SALE",
	2: "OFFLINE_SALE",
	3: "ALL_SALE",
}
var SaleMode_value = map[string]int32{
	"SALE_INIT":      0,
	"USER_SIDE_SALE": 1,
	"OFFLINE_SALE":   2,
	"ALL_SALE":       3,
}

func (x SaleMode) String() string {
	return proto.EnumName(SaleMode_name, int32(x))
}
func (SaleMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{9}
}

// 图片类型
type ImageCoverType int32

const (
	// 初始值
	ImageCoverType_COVER_TYPE_INIT ImageCoverType = 0
	// 普通图片
	ImageCoverType_COVER_TYPE_GENERAL ImageCoverType = 1
	// 封面
	ImageCoverType_COVER_TYPE_COVER ImageCoverType = 2
	// logo
	ImageCoverType_COVER_TYPE_LOGO ImageCoverType = 3
	// 头像
	ImageCoverType_COVER_TYPE_HEAD ImageCoverType = 4
	// 人脸
	ImageCoverType_COVER_TYPE_FACE ImageCoverType = 5
)

var ImageCoverType_name = map[int32]string{
	0: "COVER_TYPE_INIT",
	1: "COVER_TYPE_GENERAL",
	2: "COVER_TYPE_COVER",
	3: "COVER_TYPE_LOGO",
	4: "COVER_TYPE_HEAD",
	5: "COVER_TYPE_FACE",
}
var ImageCoverType_value = map[string]int32{
	"COVER_TYPE_INIT":    0,
	"COVER_TYPE_GENERAL": 1,
	"COVER_TYPE_COVER":   2,
	"COVER_TYPE_LOGO":    3,
	"COVER_TYPE_HEAD":    4,
	"COVER_TYPE_FACE":    5,
}

func (x ImageCoverType) String() string {
	return proto.EnumName(ImageCoverType_name, int32(x))
}
func (ImageCoverType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{10}
}

// 支持场馆
type SupportShop struct {
	// 品牌ID
	BrandId uint32 `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	// 场馆ID
	ShopId uint32 `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	// 省级ID
	ProvinceId uint32 `protobuf:"varint,3,opt,name=province_id,json=provinceId,proto3" json:"province_id,omitempty"`
	// 省级名称
	ProvinceName string `protobuf:"bytes,4,opt,name=province_name,json=provinceName,proto3" json:"province_name,omitempty"`
	// 市级ID
	CityId uint32 `protobuf:"varint,5,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	// 市级名称
	CityName string `protobuf:"bytes,6,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`
	// 区级ID
	DistrictId uint32 `protobuf:"varint,7,opt,name=district_id,json=districtId,proto3" json:"district_id,omitempty"`
	// 区级名称
	DistrictName string `protobuf:"bytes,8,opt,name=district_name,json=districtName,proto3" json:"district_name,omitempty"`
	// 门店名称
	ShopName             string   `protobuf:"bytes,9,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupportShop) Reset()         { *m = SupportShop{} }
func (m *SupportShop) String() string { return proto.CompactTextString(m) }
func (*SupportShop) ProtoMessage()    {}
func (*SupportShop) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{0}
}
func (m *SupportShop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupportShop.Unmarshal(m, b)
}
func (m *SupportShop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupportShop.Marshal(b, m, deterministic)
}
func (dst *SupportShop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupportShop.Merge(dst, src)
}
func (m *SupportShop) XXX_Size() int {
	return xxx_messageInfo_SupportShop.Size(m)
}
func (m *SupportShop) XXX_DiscardUnknown() {
	xxx_messageInfo_SupportShop.DiscardUnknown(m)
}

var xxx_messageInfo_SupportShop proto.InternalMessageInfo

func (m *SupportShop) GetBrandId() uint32 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

func (m *SupportShop) GetShopId() uint32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *SupportShop) GetProvinceId() uint32 {
	if m != nil {
		return m.ProvinceId
	}
	return 0
}

func (m *SupportShop) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

func (m *SupportShop) GetCityId() uint32 {
	if m != nil {
		return m.CityId
	}
	return 0
}

func (m *SupportShop) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *SupportShop) GetDistrictId() uint32 {
	if m != nil {
		return m.DistrictId
	}
	return 0
}

func (m *SupportShop) GetDistrictName() string {
	if m != nil {
		return m.DistrictName
	}
	return ""
}

func (m *SupportShop) GetShopName() string {
	if m != nil {
		return m.ShopName
	}
	return ""
}

// 进出店时间
type InoutTime struct {
	// 星期几
	WeekDay uint32 `protobuf:"varint,1,opt,name=week_day,json=weekDay,proto3" json:"week_day,omitempty"`
	// 入店时间
	StartTime uint32 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 离店时间
	EndTime              uint32   `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InoutTime) Reset()         { *m = InoutTime{} }
func (m *InoutTime) String() string { return proto.CompactTextString(m) }
func (*InoutTime) ProtoMessage()    {}
func (*InoutTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{1}
}
func (m *InoutTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InoutTime.Unmarshal(m, b)
}
func (m *InoutTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InoutTime.Marshal(b, m, deterministic)
}
func (dst *InoutTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InoutTime.Merge(dst, src)
}
func (m *InoutTime) XXX_Size() int {
	return xxx_messageInfo_InoutTime.Size(m)
}
func (m *InoutTime) XXX_DiscardUnknown() {
	xxx_messageInfo_InoutTime.DiscardUnknown(m)
}

var xxx_messageInfo_InoutTime proto.InternalMessageInfo

func (m *InoutTime) GetWeekDay() uint32 {
	if m != nil {
		return m.WeekDay
	}
	return 0
}

func (m *InoutTime) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *InoutTime) GetEndTime() uint32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// 不同梯度卡价格设置
type CardPrice struct {
	CardTplPriceSettingId uint32   `protobuf:"varint,1,opt,name=card_tpl_price_setting_id,json=cardTplPriceSettingId,proto3" json:"card_tpl_price_setting_id,omitempty"`
	SetPrice              uint32   `protobuf:"varint,2,opt,name=set_price,json=setPrice,proto3" json:"set_price,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CardPrice) Reset()         { *m = CardPrice{} }
func (m *CardPrice) String() string { return proto.CompactTextString(m) }
func (*CardPrice) ProtoMessage()    {}
func (*CardPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{2}
}
func (m *CardPrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardPrice.Unmarshal(m, b)
}
func (m *CardPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardPrice.Marshal(b, m, deterministic)
}
func (dst *CardPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardPrice.Merge(dst, src)
}
func (m *CardPrice) XXX_Size() int {
	return xxx_messageInfo_CardPrice.Size(m)
}
func (m *CardPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_CardPrice.DiscardUnknown(m)
}

var xxx_messageInfo_CardPrice proto.InternalMessageInfo

func (m *CardPrice) GetCardTplPriceSettingId() uint32 {
	if m != nil {
		return m.CardTplPriceSettingId
	}
	return 0
}

func (m *CardPrice) GetSetPrice() uint32 {
	if m != nil {
		return m.SetPrice
	}
	return 0
}

// 图片信息
type Image struct {
	// 图片ID
	ImageId uint32 `protobuf:"varint,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// 封面类型
	CoverType ImageCoverType `protobuf:"varint,2,opt,name=cover_type,json=coverType,proto3,enum=product.ImageCoverType" json:"cover_type,omitempty"`
	// 图片url
	ImgUrl               string   `protobuf:"bytes,3,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{3}
}
func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (dst *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(dst, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetImageId() uint32 {
	if m != nil {
		return m.ImageId
	}
	return 0
}

func (m *Image) GetCoverType() ImageCoverType {
	if m != nil {
		return m.CoverType
	}
	return ImageCoverType_COVER_TYPE_INIT
}

func (m *Image) GetImgUrl() string {
	if m != nil {
		return m.ImgUrl
	}
	return ""
}

// 标签
type Tag struct {
	// 标签ID
	TagId uint32 `protobuf:"varint,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	// 标签名称
	TagName              string   `protobuf:"bytes,9,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_product_887890bc41a39b53, []int{4}
}
func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (dst *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(dst, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetTagId() uint32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *Tag) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

func init() {
	proto.RegisterType((*SupportShop)(nil), "product.SupportShop")
	proto.RegisterType((*InoutTime)(nil), "product.InoutTime")
	proto.RegisterType((*CardPrice)(nil), "product.CardPrice")
	proto.RegisterType((*Image)(nil), "product.Image")
	proto.RegisterType((*Tag)(nil), "product.Tag")
	proto.RegisterEnum("product.ProductType", ProductType_name, ProductType_value)
	proto.RegisterEnum("product.SupportSales", SupportSales_name, SupportSales_value)
	proto.RegisterEnum("product.PublishChannel", PublishChannel_name, PublishChannel_value)
	proto.RegisterEnum("product.ShelfStatus", ShelfStatus_name, ShelfStatus_value)
	proto.RegisterEnum("product.ProductSellStatus", ProductSellStatus_name, ProductSellStatus_value)
	proto.RegisterEnum("product.CardSellType", CardSellType_name, CardSellType_value)
	proto.RegisterEnum("product.SetPriceType", SetPriceType_name, SetPriceType_value)
	proto.RegisterEnum("product.OperateType", OperateType_name, OperateType_value)
	proto.RegisterEnum("product.OpenType", OpenType_name, OpenType_value)
	proto.RegisterEnum("product.SaleMode", SaleMode_name, SaleMode_value)
	proto.RegisterEnum("product.ImageCoverType", ImageCoverType_name, ImageCoverType_value)
}

func init() { proto.RegisterFile("product.proto", fileDescriptor_product_887890bc41a39b53) }

var fileDescriptor_product_887890bc41a39b53 = []byte{
	// 1028 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x55, 0x5d, 0x6e, 0xdb, 0x46,
	0x10, 0x2e, 0x25, 0x5b, 0x3f, 0x23, 0x59, 0x59, 0x6f, 0x9c, 0xd8, 0xae, 0x6b, 0x38, 0x75, 0x5e,
	0x02, 0x01, 0xb5, 0x81, 0x06, 0x68, 0x0b, 0xf4, 0x89, 0xa2, 0xd6, 0x16, 0x01, 0x8a, 0x24, 0xb8,
	0x64, 0x82, 0x18, 0x05, 0x58, 0x5a, 0x64, 0x65, 0x22, 0x12, 0x49, 0x90, 0xab, 0x14, 0xba, 0x41,
	0x9f, 0x7b, 0x82, 0x9e, 0xa7, 0x67, 0xe8, 0x61, 0x8a, 0xdd, 0xe5, 0xc6, 0x92, 0xec, 0x07, 0xc3,
	0x3b, 0xdf, 0x37, 0xf3, 0xcd, 0xce, 0xec, 0x0c, 0x05, 0x07, 0x45, 0x99, 0xc7, 0xab, 0x19, 0xbb,
	0x2a, 0xca, 0x9c, 0xe5, 0xb8, 0x5d, 0x9b, 0x97, 0xff, 0x34, 0xa0, 0x47, 0x57, 0x45, 0x91, 0x97,
	0x8c, 0x3e, 0xe4, 0x05, 0x3e, 0x85, 0xce, 0x7d, 0x19, 0x65, 0x71, 0x98, 0xc6, 0x27, 0xda, 0x1b,
	0xed, 0xdd, 0x81, 0xd7, 0x16, 0xb6, 0x19, 0xe3, 0x63, 0x68, 0x57, 0x0f, 0x79, 0xc1, 0x99, 0x86,
	0x60, 0x5a, 0xdc, 0x34, 0x63, 0x7c, 0x01, 0xbd, 0xa2, 0xcc, 0xbf, 0xa4, 0xd9, 0x2c, 0xe1, 0x64,
	0x53, 0x90, 0xa0, 0x20, 0x33, 0xc6, 0x6f, 0x45, 0x7a, 0xe9, 0x90, 0x45, 0xcb, 0xe4, 0x64, 0xef,
	0x8d, 0xf6, 0xae, 0xeb, 0xf5, 0x15, 0x68, 0x47, 0xcb, 0x84, 0xcb, 0xcf, 0x52, 0xb6, 0xe6, 0x0a,
	0xfb, 0x52, 0x9e, 0x9b, 0x66, 0x8c, 0xcf, 0xa0, 0x2b, 0x08, 0x11, 0xd9, 0x12, 0x91, 0x1d, 0x0e,
	0x88, 0xa8, 0x0b, 0xe8, 0xc5, 0x69, 0xc5, 0xca, 0x74, 0xc6, 0x78, 0x64, 0x5b, 0xe6, 0x56, 0x90,
	0xcc, 0xfd, 0xd5, 0x41, 0x28, 0x74, 0x64, 0x6e, 0x05, 0x0a, 0x95, 0x33, 0xe8, 0x8a, 0xd2, 0x84,
	0x43, 0x57, 0xa6, 0xe0, 0x00, 0x27, 0x2f, 0x7f, 0x87, 0xae, 0x99, 0xe5, 0x2b, 0xe6, 0xa7, 0xcb,
	0x84, 0xf7, 0xe7, 0xcf, 0x24, 0xf9, 0x1c, 0xc6, 0xd1, 0x5a, 0xf5, 0x87, 0xdb, 0xe3, 0x68, 0x8d,
	0xcf, 0x01, 0x2a, 0x16, 0x95, 0x2c, 0x64, 0xe9, 0x32, 0xa9, 0x5b, 0xd4, 0x15, 0x88, 0x8a, 0x4c,
	0xb2, 0x58, 0x92, 0xb2, 0x45, 0xed, 0x24, 0x8b, 0x39, 0x75, 0x79, 0x0f, 0x5d, 0x23, 0x2a, 0x63,
	0xb7, 0x4c, 0x67, 0x09, 0xfe, 0x05, 0x4e, 0x67, 0x51, 0x19, 0x87, 0xac, 0x58, 0x84, 0x05, 0x47,
	0xc2, 0x2a, 0x61, 0x2c, 0xcd, 0xe6, 0x8f, 0x4f, 0xf2, 0x8a, 0x3b, 0xf8, 0xc5, 0x42, 0x04, 0x50,
	0xc9, 0xca, 0x46, 0x55, 0x09, 0x93, 0x41, 0x75, 0xfe, 0x4e, 0x95, 0x30, 0xe1, 0x75, 0x59, 0xc1,
	0xbe, 0xb9, 0x8c, 0xe6, 0xe2, 0x1e, 0x29, 0x3f, 0x6c, 0xbc, 0xb0, 0xb0, 0xcd, 0x18, 0xff, 0x04,
	0x30, 0xcb, 0xbf, 0x24, 0x65, 0xc8, 0xd6, 0x85, 0x54, 0x18, 0xfc, 0x78, 0x7c, 0xa5, 0x26, 0x47,
	0x84, 0x1b, 0x9c, 0xf7, 0xd7, 0x45, 0xe2, 0x75, 0x67, 0xea, 0xc8, 0x9f, 0x2e, 0x5d, 0xce, 0xc3,
	0x55, 0xb9, 0x10, 0x95, 0x75, 0xbd, 0x56, 0xba, 0x9c, 0x07, 0xe5, 0xe2, 0xf2, 0x67, 0x68, 0xfa,
	0xd1, 0x1c, 0xbf, 0x82, 0x16, 0x8b, 0x36, 0xee, 0xbf, 0xcf, 0x22, 0x7e, 0xdf, 0x53, 0xe8, 0x70,
	0x78, 0xa3, 0xe9, 0x6d, 0x16, 0xcd, 0x79, 0xcf, 0x87, 0x7f, 0x69, 0xd0, 0x73, 0x65, 0x5e, 0x91,
	0x01, 0x41, 0xdf, 0xf5, 0x9c, 0x71, 0x60, 0xf8, 0xa1, 0x69, 0x9b, 0x3e, 0xfa, 0x06, 0x1f, 0xc3,
	0x4b, 0x85, 0x4c, 0xc9, 0x74, 0x44, 0xbc, 0xd0, 0xd0, 0xbd, 0x31, 0xd2, 0xf0, 0x09, 0x1c, 0x29,
	0x62, 0x4c, 0x5c, 0x87, 0x9a, 0xbe, 0x64, 0x1a, 0xf8, 0x0c, 0x8e, 0x15, 0xe3, 0x12, 0x8f, 0x3a,
	0xb6, 0x6e, 0x85, 0x86, 0x13, 0x78, 0x94, 0xa0, 0xe6, 0xa6, 0x9e, 0x4f, 0xf4, 0xa9, 0x22, 0xf6,
	0x86, 0x04, 0xfa, 0x6a, 0x41, 0xa2, 0x45, 0x52, 0xe1, 0xd7, 0x80, 0x69, 0xe0, 0xba, 0x8e, 0xe7,
	0x87, 0x54, 0xb7, 0x08, 0x55, 0x17, 0x3a, 0x80, 0xae, 0xb4, 0x75, 0xcb, 0x42, 0x1a, 0x1e, 0x00,
	0x48, 0xd3, 0xd5, 0x3d, 0x1f, 0x35, 0x86, 0x0e, 0x0c, 0xdc, 0xd5, 0xfd, 0x22, 0xad, 0x1e, 0x8c,
	0x87, 0x28, 0xcb, 0x92, 0x85, 0xb8, 0x68, 0x30, 0xb2, 0x4c, 0x3a, 0x09, 0x8d, 0x89, 0x6e, 0xdb,
	0xc4, 0x52, 0x52, 0x87, 0x70, 0xa0, 0x90, 0x91, 0xa7, 0xdb, 0xbc, 0x2a, 0x04, 0x7d, 0x05, 0xd1,
	0x89, 0xe3, 0xa2, 0xc6, 0x70, 0x0a, 0x3d, 0xfa, 0x90, 0x2c, 0xfe, 0xa0, 0x2c, 0x62, 0xab, 0x0a,
	0x1f, 0x01, 0xa2, 0x13, 0x62, 0xdd, 0x50, 0x5f, 0xf7, 0x83, 0xaf, 0x97, 0xda, 0x41, 0xc7, 0xce,
	0x47, 0x1b, 0x69, 0x18, 0xc3, 0x60, 0x13, 0x0d, 0xb8, 0xdc, 0x1a, 0x0e, 0xeb, 0x86, 0xd3, 0x64,
	0xb1, 0xa8, 0x45, 0xbf, 0x83, 0x13, 0xd5, 0x14, 0x4a, 0x2c, 0x2b, 0xdc, 0x16, 0xff, 0x1e, 0xce,
	0x9f, 0x63, 0xf5, 0x0f, 0xba, 0x69, 0xe9, 0x23, 0x8b, 0x20, 0x0d, 0xbf, 0x85, 0x8b, 0xe7, 0x5c,
	0x02, 0xfb, 0xd1, 0xa9, 0x31, 0xac, 0xa0, 0xcf, 0xc7, 0x9f, 0xe7, 0xad, 0xc7, 0xe9, 0x25, 0x7f,
	0x31, 0x19, 0xe1, 0x7f, 0x72, 0x89, 0x4a, 0xf8, 0x1a, 0xf0, 0x0e, 0xa1, 0xbb, 0x2e, 0xd2, 0xf0,
	0xb7, 0xf0, 0x7a, 0x07, 0x77, 0x6e, 0x6e, 0x2c, 0xd3, 0x26, 0xa8, 0xf1, 0x5c, 0x8c, 0x65, 0xa1,
	0xe6, 0xf0, 0x0e, 0xfa, 0xb4, 0xde, 0x0d, 0x95, 0x94, 0x12, 0x3f, 0x74, 0x3d, 0xd3, 0x20, 0x5b,
	0x49, 0x4f, 0xe0, 0x68, 0x87, 0x50, 0x6f, 0xf2, 0x34, 0xa4, 0x7e, 0x9a, 0xff, 0x34, 0xe8, 0x39,
	0x45, 0x52, 0x46, 0x4c, 0x6a, 0xbf, 0x82, 0x43, 0xc7, 0x25, 0x9e, 0xee, 0x13, 0x31, 0x8a, 0x1b,
	0x23, 0xbc, 0x05, 0x1b, 0x1e, 0xd1, 0x7d, 0x22, 0x85, 0xb7, 0x88, 0xc0, 0x1d, 0x73, 0xa2, 0xf1,
	0x84, 0x70, 0x6c, 0x51, 0x65, 0x93, 0x5f, 0x72, 0x9b, 0xa8, 0xeb, 0xdf, 0xe3, 0xbd, 0xd9, 0x62,
	0xa8, 0xef, 0xb8, 0xa2, 0x19, 0x68, 0x1f, 0x9f, 0xc3, 0xe9, 0x16, 0xe7, 0x11, 0xea, 0xeb, 0x9e,
	0x7c, 0x2a, 0xd4, 0xe2, 0xad, 0xdb, 0x16, 0xf5, 0x27, 0xc4, 0x43, 0xed, 0xe1, 0x1d, 0x74, 0x9c,
	0x22, 0xc9, 0x44, 0x69, 0x87, 0x70, 0x10, 0xd0, 0xed, 0x86, 0xd5, 0x90, 0x67, 0xde, 0x4e, 0xfc,
	0xd0, 0x76, 0x3e, 0x22, 0x0d, 0xbf, 0x80, 0x1e, 0x87, 0x46, 0x9f, 0xea, 0x0e, 0xf1, 0x42, 0x14,
	0xe0, 0x12, 0xc3, 0xd4, 0xad, 0x50, 0x54, 0xd8, 0x1c, 0x4e, 0xa1, 0xc3, 0xd7, 0x6c, 0x9a, 0xc7,
	0x89, 0xda, 0x28, 0xa5, 0x8b, 0x61, 0x10, 0x50, 0xe2, 0x85, 0xd4, 0x1c, 0x13, 0xb1, 0x7a, 0x72,
	0x2d, 0xea, 0x52, 0x25, 0xd2, 0xc0, 0x7d, 0xe8, 0xe8, 0x7c, 0xd0, 0xb8, 0xd5, 0x1c, 0xfe, 0xad,
	0xc1, 0x60, 0xfb, 0xbb, 0x85, 0x5f, 0xc2, 0x0b, 0xc3, 0xf9, 0x40, 0xbc, 0x27, 0x93, 0xf5, 0x08,
	0xde, 0x12, 0x9b, 0x78, 0x3a, 0xdf, 0xe2, 0x23, 0x40, 0x1b, 0xb8, 0x38, 0xa2, 0xc6, 0x8e, 0x84,
	0xe5, 0xdc, 0x3a, 0xa8, 0xb9, 0x03, 0x4e, 0x88, 0x3e, 0x46, 0x7b, 0x3b, 0xe0, 0x8d, 0x6e, 0x10,
	0xb4, 0x3f, 0x9a, 0xdc, 0xbd, 0x9f, 0xa7, 0x6c, 0x11, 0xdd, 0x5f, 0x55, 0x6c, 0x1d, 0x5f, 0xcd,
	0xb2, 0xeb, 0x15, 0xcb, 0xf9, 0xdf, 0x0f, 0x55, 0xfc, 0xf9, 0x7a, 0x9e, 0x5f, 0x8b, 0xdf, 0xe8,
	0xeb, 0xfa, 0xbb, 0xfb, 0x6b, 0xfd, 0xff, 0xdf, 0x06, 0x0a, 0x58, 0xee, 0x72, 0xea, 0xb7, 0x7a,
	0x53, 0xef, 0x5b, 0xc2, 0xf3, 0xfd, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x49, 0xdd, 0x68, 0x49,
	0xde, 0x07, 0x00, 0x00,
}
