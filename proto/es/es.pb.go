// Code generated by protoc-gen-go. DO NOT EDIT.
// source: es.proto

package es // import "j7go/proto/es"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/joselee214/j7f/proto/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EmptyRequest struct {
	Header               *common.CommonHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_es_2910d7ab001b4bd4, []int{0}
}
func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (dst *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(dst, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

func (m *EmptyRequest) GetHeader() *common.CommonHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type BookItem struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Publish              string   `protobuf:"bytes,3,opt,name=publish,proto3" json:"publish,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Author               string   `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	Info                 string   `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`
	Price                float32  `protobuf:"fixed32,7,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookItem) Reset()         { *m = BookItem{} }
func (m *BookItem) String() string { return proto.CompactTextString(m) }
func (*BookItem) ProtoMessage()    {}
func (*BookItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_es_2910d7ab001b4bd4, []int{1}
}
func (m *BookItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookItem.Unmarshal(m, b)
}
func (m *BookItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookItem.Marshal(b, m, deterministic)
}
func (dst *BookItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookItem.Merge(dst, src)
}
func (m *BookItem) XXX_Size() int {
	return xxx_messageInfo_BookItem.Size(m)
}
func (m *BookItem) XXX_DiscardUnknown() {
	xxx_messageInfo_BookItem.DiscardUnknown(m)
}

var xxx_messageInfo_BookItem proto.InternalMessageInfo

func (m *BookItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BookItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BookItem) GetPublish() string {
	if m != nil {
		return m.Publish
	}
	return ""
}

func (m *BookItem) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *BookItem) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *BookItem) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *BookItem) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type BookReply struct {
	Status               *common.BusinessStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	BookItems            []*BookItem            `protobuf:"bytes,2,rep,name=book_items,json=bookItems,proto3" json:"book_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BookReply) Reset()         { *m = BookReply{} }
func (m *BookReply) String() string { return proto.CompactTextString(m) }
func (*BookReply) ProtoMessage()    {}
func (*BookReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_es_2910d7ab001b4bd4, []int{2}
}
func (m *BookReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookReply.Unmarshal(m, b)
}
func (m *BookReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookReply.Marshal(b, m, deterministic)
}
func (dst *BookReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookReply.Merge(dst, src)
}
func (m *BookReply) XXX_Size() int {
	return xxx_messageInfo_BookReply.Size(m)
}
func (m *BookReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BookReply.DiscardUnknown(m)
}

var xxx_messageInfo_BookReply proto.InternalMessageInfo

func (m *BookReply) GetStatus() *common.BusinessStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BookReply) GetBookItems() []*BookItem {
	if m != nil {
		return m.BookItems
	}
	return nil
}

type AggItem struct {
	Price                float32  `protobuf:"fixed32,1,opt,name=price,proto3" json:"price,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggItem) Reset()         { *m = AggItem{} }
func (m *AggItem) String() string { return proto.CompactTextString(m) }
func (*AggItem) ProtoMessage()    {}
func (*AggItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_es_2910d7ab001b4bd4, []int{3}
}
func (m *AggItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggItem.Unmarshal(m, b)
}
func (m *AggItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggItem.Marshal(b, m, deterministic)
}
func (dst *AggItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggItem.Merge(dst, src)
}
func (m *AggItem) XXX_Size() int {
	return xxx_messageInfo_AggItem.Size(m)
}
func (m *AggItem) XXX_DiscardUnknown() {
	xxx_messageInfo_AggItem.DiscardUnknown(m)
}

var xxx_messageInfo_AggItem proto.InternalMessageInfo

func (m *AggItem) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *AggItem) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type AggReply struct {
	Status               *common.BusinessStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Aggs                 []*AggItem             `protobuf:"bytes,2,rep,name=aggs,proto3" json:"aggs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AggReply) Reset()         { *m = AggReply{} }
func (m *AggReply) String() string { return proto.CompactTextString(m) }
func (*AggReply) ProtoMessage()    {}
func (*AggReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_es_2910d7ab001b4bd4, []int{4}
}
func (m *AggReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggReply.Unmarshal(m, b)
}
func (m *AggReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggReply.Marshal(b, m, deterministic)
}
func (dst *AggReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggReply.Merge(dst, src)
}
func (m *AggReply) XXX_Size() int {
	return xxx_messageInfo_AggReply.Size(m)
}
func (m *AggReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AggReply.DiscardUnknown(m)
}

var xxx_messageInfo_AggReply proto.InternalMessageInfo

func (m *AggReply) GetStatus() *common.BusinessStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *AggReply) GetAggs() []*AggItem {
	if m != nil {
		return m.Aggs
	}
	return nil
}

func init() {
	proto.RegisterType((*EmptyRequest)(nil), "es.EmptyRequest")
	proto.RegisterType((*BookItem)(nil), "es.BookItem")
	proto.RegisterType((*BookReply)(nil), "es.BookReply")
	proto.RegisterType((*AggItem)(nil), "es.AggItem")
	proto.RegisterType((*AggReply)(nil), "es.AggReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EsServiceClient is the client API for EsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EsServiceClient interface {
	SimpleQuery(ctx context.Context, opts ...grpc.CallOption) (EsService_SimpleQueryClient, error)
	BoolQuery(ctx context.Context, opts ...grpc.CallOption) (EsService_BoolQueryClient, error)
	Agg(ctx context.Context, opts ...grpc.CallOption) (EsService_AggClient, error)
}

type esServiceClient struct {
	cc *grpc.ClientConn
}

func NewEsServiceClient(cc *grpc.ClientConn) EsServiceClient {
	return &esServiceClient{cc}
}

func (c *esServiceClient) SimpleQuery(ctx context.Context, opts ...grpc.CallOption) (EsService_SimpleQueryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EsService_serviceDesc.Streams[0], "/es.EsService/SimpleQuery", opts...)
	if err != nil {
		return nil, err
	}
	x := &esServiceSimpleQueryClient{stream}
	return x, nil
}

type EsService_SimpleQueryClient interface {
	Send(*EmptyRequest) error
	Recv() (*BookReply, error)
	grpc.ClientStream
}

type esServiceSimpleQueryClient struct {
	grpc.ClientStream
}

func (x *esServiceSimpleQueryClient) Send(m *EmptyRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *esServiceSimpleQueryClient) Recv() (*BookReply, error) {
	m := new(BookReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *esServiceClient) BoolQuery(ctx context.Context, opts ...grpc.CallOption) (EsService_BoolQueryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EsService_serviceDesc.Streams[1], "/es.EsService/BoolQuery", opts...)
	if err != nil {
		return nil, err
	}
	x := &esServiceBoolQueryClient{stream}
	return x, nil
}

type EsService_BoolQueryClient interface {
	Send(*EmptyRequest) error
	Recv() (*BookReply, error)
	grpc.ClientStream
}

type esServiceBoolQueryClient struct {
	grpc.ClientStream
}

func (x *esServiceBoolQueryClient) Send(m *EmptyRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *esServiceBoolQueryClient) Recv() (*BookReply, error) {
	m := new(BookReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *esServiceClient) Agg(ctx context.Context, opts ...grpc.CallOption) (EsService_AggClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EsService_serviceDesc.Streams[2], "/es.EsService/Agg", opts...)
	if err != nil {
		return nil, err
	}
	x := &esServiceAggClient{stream}
	return x, nil
}

type EsService_AggClient interface {
	Send(*EmptyRequest) error
	Recv() (*AggReply, error)
	grpc.ClientStream
}

type esServiceAggClient struct {
	grpc.ClientStream
}

func (x *esServiceAggClient) Send(m *EmptyRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *esServiceAggClient) Recv() (*AggReply, error) {
	m := new(AggReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EsServiceServer is the server API for EsService service.
type EsServiceServer interface {
	SimpleQuery(EsService_SimpleQueryServer) error
	BoolQuery(EsService_BoolQueryServer) error
	Agg(EsService_AggServer) error
}

func RegisterEsServiceServer(s *grpc.Server, srv EsServiceServer) {
	s.RegisterService(&_EsService_serviceDesc, srv)
}

func _EsService_SimpleQuery_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EsServiceServer).SimpleQuery(&esServiceSimpleQueryServer{stream})
}

type EsService_SimpleQueryServer interface {
	Send(*BookReply) error
	Recv() (*EmptyRequest, error)
	grpc.ServerStream
}

type esServiceSimpleQueryServer struct {
	grpc.ServerStream
}

func (x *esServiceSimpleQueryServer) Send(m *BookReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *esServiceSimpleQueryServer) Recv() (*EmptyRequest, error) {
	m := new(EmptyRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _EsService_BoolQuery_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EsServiceServer).BoolQuery(&esServiceBoolQueryServer{stream})
}

type EsService_BoolQueryServer interface {
	Send(*BookReply) error
	Recv() (*EmptyRequest, error)
	grpc.ServerStream
}

type esServiceBoolQueryServer struct {
	grpc.ServerStream
}

func (x *esServiceBoolQueryServer) Send(m *BookReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *esServiceBoolQueryServer) Recv() (*EmptyRequest, error) {
	m := new(EmptyRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _EsService_Agg_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EsServiceServer).Agg(&esServiceAggServer{stream})
}

type EsService_AggServer interface {
	Send(*AggReply) error
	Recv() (*EmptyRequest, error)
	grpc.ServerStream
}

type esServiceAggServer struct {
	grpc.ServerStream
}

func (x *esServiceAggServer) Send(m *AggReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *esServiceAggServer) Recv() (*EmptyRequest, error) {
	m := new(EmptyRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _EsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "es.EsService",
	HandlerType: (*EsServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SimpleQuery",
			Handler:       _EsService_SimpleQuery_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "BoolQuery",
			Handler:       _EsService_BoolQuery_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Agg",
			Handler:       _EsService_Agg_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "es.proto",
}

func init() { proto.RegisterFile("es.proto", fileDescriptor_es_2910d7ab001b4bd4) }

var fileDescriptor_es_2910d7ab001b4bd4 = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x41, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x49, 0xda, 0x4d, 0xdb, 0x97, 0x2a, 0x32, 0x2c, 0xcb, 0xb0, 0x17, 0x4b, 0x4e, 0x5d,
	0xd4, 0x74, 0xa9, 0x78, 0x10, 0xbd, 0xb4, 0x52, 0xd0, 0x9b, 0x4e, 0xf1, 0xa2, 0x82, 0x24, 0xcd,
	0x73, 0x32, 0x34, 0xc9, 0xc4, 0xbc, 0x89, 0x90, 0xef, 0x22, 0x7e, 0x20, 0x3f, 0x95, 0xcc, 0x24,
	0x59, 0xf6, 0xe0, 0x45, 0x0f, 0x21, 0xef, 0xfd, 0xdf, 0x6f, 0xe0, 0xf7, 0x26, 0x81, 0x39, 0x52,
	0x5c, 0x37, 0xda, 0x68, 0xe6, 0x23, 0x5d, 0x2f, 0x4f, 0xba, 0x2c, 0x75, 0xd5, 0x27, 0xd1, 0x6b,
	0x58, 0x1e, 0xca, 0xda, 0x74, 0x02, 0xbf, 0xb7, 0x48, 0x86, 0x3d, 0x85, 0x20, 0xc7, 0x24, 0xc3,
	0x86, 0x7b, 0x2b, 0x6f, 0x1d, 0x6e, 0x2f, 0xe3, 0x01, 0x7f, 0xe3, 0x5e, 0x6f, 0xdd, 0x4c, 0x0c,
	0x4c, 0xf4, 0xcb, 0x83, 0xf9, 0x5e, 0xeb, 0xf3, 0x3b, 0x83, 0x25, 0x7b, 0x08, 0xbe, 0xca, 0xdc,
	0xb1, 0x85, 0xf0, 0x55, 0xc6, 0x18, 0x4c, 0xab, 0xa4, 0x44, 0xee, 0xbb, 0xc4, 0xd5, 0x8c, 0xc3,
	0xac, 0x6e, 0xd3, 0x42, 0x51, 0xce, 0x27, 0x2e, 0x1e, 0x5b, 0x4b, 0x9b, 0xae, 0x46, 0x3e, 0xed,
	0x69, 0x5b, 0xb3, 0x2b, 0x08, 0x92, 0xd6, 0xe4, 0xba, 0xe1, 0x17, 0x2e, 0x1d, 0x3a, 0xcb, 0xaa,
	0xea, 0x9b, 0xe6, 0x41, 0xcf, 0xda, 0x9a, 0x5d, 0xc2, 0x45, 0xdd, 0xa8, 0x13, 0xf2, 0xd9, 0xca,
	0x5b, 0xfb, 0xa2, 0x6f, 0xa2, 0x1c, 0x16, 0xd6, 0x4f, 0x60, 0x5d, 0x74, 0x2c, 0x86, 0x80, 0x4c,
	0x62, 0x5a, 0x1a, 0x76, 0xbb, 0x1a, 0x77, 0xdb, 0xb7, 0xa4, 0x2a, 0x24, 0x3a, 0xba, 0xa9, 0x18,
	0x28, 0xf6, 0x04, 0x20, 0xd5, 0xfa, 0xfc, 0x55, 0x19, 0x2c, 0x89, 0xfb, 0xab, 0xc9, 0x3a, 0xdc,
	0x2e, 0x63, 0xa4, 0x78, 0x5c, 0x59, 0x2c, 0xd2, 0xa1, 0xa2, 0xe8, 0x05, 0xcc, 0x76, 0x52, 0xba,
	0x8b, 0xb8, 0x53, 0xf1, 0xee, 0xa9, 0xd8, 0xf4, 0xa4, 0xdb, 0xca, 0xb8, 0xfb, 0x98, 0x88, 0xbe,
	0x89, 0x3e, 0xc3, 0x7c, 0x27, 0xe5, 0xff, 0xf9, 0x3d, 0x86, 0x69, 0x22, 0xe5, 0x68, 0x16, 0x5a,
	0xb3, 0x41, 0x41, 0xb8, 0xc1, 0xf6, 0xa7, 0x07, 0x8b, 0x03, 0x1d, 0xb1, 0xf9, 0x61, 0x05, 0xb6,
	0x10, 0x1e, 0x55, 0x59, 0x17, 0xf8, 0xa1, 0xc5, 0xa6, 0x63, 0x8f, 0x2c, 0x7f, 0xff, 0xdb, 0x5f,
	0x3f, 0x18, 0x77, 0x73, 0x3a, 0x6b, 0xef, 0xd6, 0x63, 0xb7, 0xee, 0xfe, 0x8a, 0x7f, 0x38, 0x71,
	0x03, 0x93, 0x9d, 0x94, 0x7f, 0x61, 0x97, 0x83, 0xdf, 0x1d, 0xba, 0x7f, 0xf9, 0xe9, 0x46, 0x2a,
	0x53, 0x24, 0x69, 0x4c, 0xa6, 0xcb, 0xe2, 0x53, 0xb5, 0x69, 0x8d, 0xb6, 0xcf, 0x33, 0xca, 0xce,
	0x1b, 0xa9, 0x37, 0xee, 0x17, 0xdd, 0x20, 0xbd, 0x42, 0xfa, 0xed, 0x87, 0x1f, 0x8d, 0x7e, 0x6f,
	0x83, 0x2f, 0x07, 0x4a, 0x03, 0x37, 0x7a, 0xfe, 0x27, 0x00, 0x00, 0xff, 0xff, 0x33, 0x4a, 0xf1,
	0x36, 0xdb, 0x02, 0x00, 0x00,
}
