// Code generated by protoc-gen-go. DO NOT EDIT.
// source: idProduce.proto

package idProduce // import "j7go/proto/idProduce"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/joselee214/j7f/proto/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IdProduceRequest struct {
	Header               *common.CommonHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	BusinessType         int64                `protobuf:"varint,2,opt,name=business_type,json=businessType,proto3" json:"business_type,omitempty"`
	Len                  int64                `protobuf:"varint,3,opt,name=len,proto3" json:"len,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *IdProduceRequest) Reset()         { *m = IdProduceRequest{} }
func (m *IdProduceRequest) String() string { return proto.CompactTextString(m) }
func (*IdProduceRequest) ProtoMessage()    {}
func (*IdProduceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_idProduce_e90697fde0db4559, []int{0}
}
func (m *IdProduceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdProduceRequest.Unmarshal(m, b)
}
func (m *IdProduceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdProduceRequest.Marshal(b, m, deterministic)
}
func (dst *IdProduceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdProduceRequest.Merge(dst, src)
}
func (m *IdProduceRequest) XXX_Size() int {
	return xxx_messageInfo_IdProduceRequest.Size(m)
}
func (m *IdProduceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdProduceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdProduceRequest proto.InternalMessageInfo

func (m *IdProduceRequest) GetHeader() *common.CommonHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *IdProduceRequest) GetBusinessType() int64 {
	if m != nil {
		return m.BusinessType
	}
	return 0
}

func (m *IdProduceRequest) GetLen() int64 {
	if m != nil {
		return m.Len
	}
	return 0
}

type IdProduceResponse struct {
	Status               *common.BusinessStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Ids                  []int64                `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *IdProduceResponse) Reset()         { *m = IdProduceResponse{} }
func (m *IdProduceResponse) String() string { return proto.CompactTextString(m) }
func (*IdProduceResponse) ProtoMessage()    {}
func (*IdProduceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_idProduce_e90697fde0db4559, []int{1}
}
func (m *IdProduceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdProduceResponse.Unmarshal(m, b)
}
func (m *IdProduceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdProduceResponse.Marshal(b, m, deterministic)
}
func (dst *IdProduceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdProduceResponse.Merge(dst, src)
}
func (m *IdProduceResponse) XXX_Size() int {
	return xxx_messageInfo_IdProduceResponse.Size(m)
}
func (m *IdProduceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IdProduceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IdProduceResponse proto.InternalMessageInfo

func (m *IdProduceResponse) GetStatus() *common.BusinessStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *IdProduceResponse) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func init() {
	proto.RegisterType((*IdProduceRequest)(nil), "utoProto.idProduce.IdProduceRequest")
	proto.RegisterType((*IdProduceResponse)(nil), "utoProto.idProduce.IdProduceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IdProduceClient is the client API for IdProduce service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdProduceClient interface {
	GetUniqueIds(ctx context.Context, opts ...grpc.CallOption) (IdProduce_GetUniqueIdsClient, error)
}

type idProduceClient struct {
	cc *grpc.ClientConn
}

func NewIdProduceClient(cc *grpc.ClientConn) IdProduceClient {
	return &idProduceClient{cc}
}

func (c *idProduceClient) GetUniqueIds(ctx context.Context, opts ...grpc.CallOption) (IdProduce_GetUniqueIdsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_IdProduce_serviceDesc.Streams[0], "/utoProto.idProduce.IdProduce/GetUniqueIds", opts...)
	if err != nil {
		return nil, err
	}
	x := &idProduceGetUniqueIdsClient{stream}
	return x, nil
}

type IdProduce_GetUniqueIdsClient interface {
	Send(*IdProduceRequest) error
	Recv() (*IdProduceResponse, error)
	grpc.ClientStream
}

type idProduceGetUniqueIdsClient struct {
	grpc.ClientStream
}

func (x *idProduceGetUniqueIdsClient) Send(m *IdProduceRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *idProduceGetUniqueIdsClient) Recv() (*IdProduceResponse, error) {
	m := new(IdProduceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// IdProduceServer is the server API for IdProduce service.
type IdProduceServer interface {
	GetUniqueIds(IdProduce_GetUniqueIdsServer) error
}

func RegisterIdProduceServer(s *grpc.Server, srv IdProduceServer) {
	s.RegisterService(&_IdProduce_serviceDesc, srv)
}

func _IdProduce_GetUniqueIds_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IdProduceServer).GetUniqueIds(&idProduceGetUniqueIdsServer{stream})
}

type IdProduce_GetUniqueIdsServer interface {
	Send(*IdProduceResponse) error
	Recv() (*IdProduceRequest, error)
	grpc.ServerStream
}

type idProduceGetUniqueIdsServer struct {
	grpc.ServerStream
}

func (x *idProduceGetUniqueIdsServer) Send(m *IdProduceResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *idProduceGetUniqueIdsServer) Recv() (*IdProduceRequest, error) {
	m := new(IdProduceRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _IdProduce_serviceDesc = grpc.ServiceDesc{
	ServiceName: "utoProto.idProduce.IdProduce",
	HandlerType: (*IdProduceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetUniqueIds",
			Handler:       _IdProduce_GetUniqueIds_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "idProduce.proto",
}

func init() { proto.RegisterFile("idProduce.proto", fileDescriptor_idProduce_e90697fde0db4559) }

var fileDescriptor_idProduce_e90697fde0db4559 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x41, 0x4b, 0xfb, 0x30,
	0x18, 0xc6, 0xe9, 0x0a, 0x83, 0x7f, 0xfe, 0x15, 0x67, 0x10, 0x29, 0x3b, 0x95, 0xa9, 0xd0, 0x83,
	0xa6, 0x32, 0x0f, 0x1e, 0xbc, 0xcd, 0x83, 0xee, 0x22, 0xa3, 0xda, 0x8b, 0x08, 0xa3, 0x6d, 0x5e,
	0x66, 0xb0, 0x4b, 0xba, 0xbe, 0x09, 0xd2, 0xaf, 0xe8, 0xa7, 0x92, 0x66, 0x69, 0x11, 0x3d, 0x78,
	0x08, 0x79, 0xc8, 0xf3, 0xe4, 0xf7, 0x24, 0x2f, 0x39, 0x14, 0x7c, 0xd5, 0x28, 0x6e, 0x4a, 0x60,
	0x75, 0xa3, 0xb4, 0xa2, 0xd4, 0x68, 0xb5, 0xea, 0x14, 0x1b, 0x9c, 0x69, 0x50, 0xaa, 0xed, 0x56,
	0xc9, 0x7d, 0x62, 0xf6, 0x41, 0x26, 0xcb, 0xde, 0x4a, 0x61, 0x67, 0x00, 0x35, 0xbd, 0x20, 0xe3,
	0x37, 0xc8, 0x39, 0x34, 0xa1, 0x17, 0x79, 0xf1, 0xff, 0xf9, 0x31, 0x73, 0x57, 0xee, 0xec, 0xf6,
	0x60, 0xbd, 0xd4, 0x65, 0xe8, 0x29, 0x39, 0x28, 0x0c, 0x0a, 0x09, 0x88, 0x6b, 0xdd, 0xd6, 0x10,
	0x8e, 0x22, 0x2f, 0xf6, 0xd3, 0xa0, 0x3f, 0x7c, 0x6e, 0x6b, 0xa0, 0x13, 0xe2, 0x57, 0x20, 0x43,
	0xdf, 0x5a, 0x9d, 0x9c, 0x65, 0xe4, 0xe8, 0x5b, 0x31, 0xd6, 0x4a, 0x22, 0x50, 0x46, 0xc6, 0xa8,
	0x73, 0x6d, 0xd0, 0x35, 0x9f, 0xf4, 0xcd, 0x0b, 0x07, 0x7b, 0xb2, 0x6e, 0xea, 0x52, 0x1d, 0x56,
	0x70, 0x0c, 0x47, 0x91, 0xdf, 0x61, 0x05, 0xc7, 0x79, 0x45, 0xfe, 0x0d, 0x58, 0xba, 0x26, 0xc1,
	0x3d, 0xe8, 0x4c, 0x8a, 0x9d, 0x81, 0x25, 0x47, 0x7a, 0xc6, 0x7e, 0xcf, 0x83, 0xfd, 0xfc, 0xfe,
	0xf4, 0xfc, 0x8f, 0xd4, 0xfe, 0xad, 0xb1, 0x77, 0xe5, 0x2d, 0x1e, 0x5f, 0x6e, 0x36, 0x42, 0x57,
	0x79, 0xc1, 0x50, 0xb7, 0x9c, 0x95, 0x32, 0x31, 0x5a, 0x75, 0xeb, 0x12, 0xf9, 0x7b, 0xb2, 0x51,
	0x89, 0x1d, 0x72, 0x32, 0x60, 0x6e, 0x07, 0xf5, 0x39, 0xa2, 0x99, 0x6b, 0x79, 0x1d, 0xd8, 0xc5,
	0xd8, 0xe6, 0xaf, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xbe, 0xc3, 0x31, 0xe3, 0xc9, 0x01, 0x00,
	0x00,
}
