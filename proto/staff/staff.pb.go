// Code generated by protoc-gen-go. DO NOT EDIT.
// source: staff.proto

package staff // import "j7go/proto/staff"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "go.7yes.com/j7f/proto/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 在职状态
type JobStatus int32

const (
	// 初始值，无意义
	JobStatus_STATUS_INIT JobStatus = 0
	// 离职
	JobStatus_LEAVE_SERVICE JobStatus = 1
	// 在职
	JobStatus_IN_SERVICE JobStatus = 2
	// 实习
	JobStatus_PRACTICE_SERVICE JobStatus = 3
	// 兼职
	JobStatus_PART_TIME_JOBS JobStatus = 4
)

var JobStatus_name = map[int32]string{
	0: "STATUS_INIT",
	1: "LEAVE_SERVICE",
	2: "IN_SERVICE",
	3: "PRACTICE_SERVICE",
	4: "PART_TIME_JOBS",
}
var JobStatus_value = map[string]int32{
	"STATUS_INIT":      0,
	"LEAVE_SERVICE":    1,
	"IN_SERVICE":       2,
	"PRACTICE_SERVICE": 3,
	"PART_TIME_JOBS":   4,
}

func (x JobStatus) String() string {
	return proto.EnumName(JobStatus_name, int32(x))
}
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{0}
}

// 员工类型
type StaffType int32

const (
	// 初始值，无意义
	StaffType_STAFF_TYPE_INIT StaffType = 0
	// 超级管理员
	StaffType_ADMINISTRATOR StaffType = 1
)

var StaffType_name = map[int32]string{
	0: "STAFF_TYPE_INIT",
	1: "ADMINISTRATOR",
}
var StaffType_value = map[string]int32{
	"STAFF_TYPE_INIT": 0,
	"ADMINISTRATOR":   1,
}

func (x StaffType) String() string {
	return proto.EnumName(StaffType_name, int32(x))
}
func (StaffType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{1}
}

// 新增/编辑员工
type StaffRequest struct {
	// 公共请求头
	Header *common.CommonHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// 员工id
	StaffId uint32 `protobuf:"varint,2,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	// 员工姓名
	StaffName string `protobuf:"bytes,3,opt,name=staff_name,json=staffName,proto3" json:"staff_name,omitempty"`
	// 昵称
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 手机号
	Mobile string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	// 员工工号
	StaffNum string `protobuf:"bytes,6,opt,name=staff_num,json=staffNum,proto3" json:"staff_num,omitempty"`
	// 性别
	Sex uint32 `protobuf:"varint,7,opt,name=sex,proto3" json:"sex,omitempty"`
	// 证件类型
	IdType uint32 `protobuf:"varint,8,opt,name=id_type,json=idType,proto3" json:"id_type,omitempty"`
	// 证件号
	IdNum string `protobuf:"bytes,9,opt,name=id_num,json=idNum,proto3" json:"id_num,omitempty"`
	// 职位
	WorkingPost string `protobuf:"bytes,10,opt,name=working_post,json=workingPost,proto3" json:"working_post,omitempty"`
	// 身份
	Identity []int32 `protobuf:"varint,11,rep,packed,name=identity,proto3" json:"identity,omitempty"`
	// 教练等级
	CoachLevelId uint32 `protobuf:"varint,12,opt,name=coach_level_id,json=coachLevelId,proto3" json:"coach_level_id,omitempty"`
	// 工作性质
	NatureWork uint32 `protobuf:"varint,13,opt,name=nature_work,json=natureWork,proto3" json:"nature_work,omitempty"`
	// 入职时间
	EntryDate int32 `protobuf:"varint,14,opt,name=entry_date,json=entryDate,proto3" json:"entry_date,omitempty"`
	// 所属门店
	ShopId []uint32 `protobuf:"varint,15,rep,packed,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	// 系统权限
	IsPermission uint32 `protobuf:"varint,16,opt,name=is_permission,json=isPermission,proto3" json:"is_permission,omitempty"`
	// 毕业院校
	GraduatedSchool string `protobuf:"bytes,17,opt,name=graduated_school,json=graduatedSchool,proto3" json:"graduated_school,omitempty"`
	// 毕业时间
	GraduationTime int32 `protobuf:"varint,18,opt,name=graduation_time,json=graduationTime,proto3" json:"graduation_time,omitempty"`
	// 学历
	Education uint32 `protobuf:"varint,19,opt,name=education,proto3" json:"education,omitempty"`
	// 专业
	Profession string `protobuf:"bytes,20,opt,name=profession,proto3" json:"profession,omitempty"`
	// 生日
	Birthday string `protobuf:"bytes,21,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// 籍贯
	NativePlace string `protobuf:"bytes,22,opt,name=native_place,json=nativePlace,proto3" json:"native_place,omitempty"`
	// 婚姻状态
	MarryStatus uint32 `protobuf:"varint,23,opt,name=marry_status,json=marryStatus,proto3" json:"marry_status,omitempty"`
	// 子女状况
	ChildrenStatus uint32 `protobuf:"varint,24,opt,name=children_status,json=childrenStatus,proto3" json:"children_status,omitempty"`
	// 省id
	ProvinceId uint32 `protobuf:"varint,25,opt,name=province_id,json=provinceId,proto3" json:"province_id,omitempty"`
	// 省会名称
	ProvinceName string `protobuf:"bytes,26,opt,name=province_name,json=provinceName,proto3" json:"province_name,omitempty"`
	// 城市id
	CityId uint32 `protobuf:"varint,27,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	// 城市名称
	CityName string `protobuf:"bytes,28,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`
	// 区域id
	DistrictId uint32 `protobuf:"varint,29,opt,name=district_id,json=districtId,proto3" json:"district_id,omitempty"`
	// 区域名称
	DistrictName string `protobuf:"bytes,30,opt,name=district_name,json=districtName,proto3" json:"district_name,omitempty"`
	// 详细地址
	Address string `protobuf:"bytes,31,opt,name=address,proto3" json:"address,omitempty"`
	// 备注
	Description string `protobuf:"bytes,32,opt,name=description,proto3" json:"description,omitempty"`
	// 从业时间
	EmploymentTime int32 `protobuf:"varint,33,opt,name=employment_time,json=employmentTime,proto3" json:"employment_time,omitempty"`
	// 擅长项目id
	SpecialtyId []uint32 `protobuf:"varint,34,rep,packed,name=specialty_id,json=specialtyId,proto3" json:"specialty_id,omitempty"`
	// 专业认证
	CertificationName []string `protobuf:"bytes,35,rep,name=certification_name,json=certificationName,proto3" json:"certification_name,omitempty"`
	// 个人经历
	Introduction string `protobuf:"bytes,36,opt,name=introduction,proto3" json:"introduction,omitempty"`
	// 对外展示
	IsShow uint32 `protobuf:"varint,37,opt,name=is_show,json=isShow,proto3" json:"is_show,omitempty"`
	// 相册id
	AlbumId uint32 `protobuf:"varint,38,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	// 所属品牌id
	BrandId uint32 `protobuf:"varint,39,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	// 当前场馆id
	CurrentShop uint32 `protobuf:"varint,41,opt,name=current_shop,json=currentShop,proto3" json:"current_shop,omitempty"`
	// 国家编码id
	CountryCodeId uint32 `protobuf:"varint,42,opt,name=country_code_id,json=countryCodeId,proto3" json:"country_code_id,omitempty"`
	// 账号
	Account string `protobuf:"bytes,43,opt,name=account,proto3" json:"account,omitempty"`
	// 密码
	Password string `protobuf:"bytes,44,opt,name=password,proto3" json:"password,omitempty"`
	// 邮箱
	Email                string   `protobuf:"bytes,45,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StaffRequest) Reset()         { *m = StaffRequest{} }
func (m *StaffRequest) String() string { return proto.CompactTextString(m) }
func (*StaffRequest) ProtoMessage()    {}
func (*StaffRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{0}
}
func (m *StaffRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaffRequest.Unmarshal(m, b)
}
func (m *StaffRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaffRequest.Marshal(b, m, deterministic)
}
func (dst *StaffRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaffRequest.Merge(dst, src)
}
func (m *StaffRequest) XXX_Size() int {
	return xxx_messageInfo_StaffRequest.Size(m)
}
func (m *StaffRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StaffRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StaffRequest proto.InternalMessageInfo

func (m *StaffRequest) GetHeader() *common.CommonHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *StaffRequest) GetStaffId() uint32 {
	if m != nil {
		return m.StaffId
	}
	return 0
}

func (m *StaffRequest) GetStaffName() string {
	if m != nil {
		return m.StaffName
	}
	return ""
}

func (m *StaffRequest) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *StaffRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *StaffRequest) GetStaffNum() string {
	if m != nil {
		return m.StaffNum
	}
	return ""
}

func (m *StaffRequest) GetSex() uint32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *StaffRequest) GetIdType() uint32 {
	if m != nil {
		return m.IdType
	}
	return 0
}

func (m *StaffRequest) GetIdNum() string {
	if m != nil {
		return m.IdNum
	}
	return ""
}

func (m *StaffRequest) GetWorkingPost() string {
	if m != nil {
		return m.WorkingPost
	}
	return ""
}

func (m *StaffRequest) GetIdentity() []int32 {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *StaffRequest) GetCoachLevelId() uint32 {
	if m != nil {
		return m.CoachLevelId
	}
	return 0
}

func (m *StaffRequest) GetNatureWork() uint32 {
	if m != nil {
		return m.NatureWork
	}
	return 0
}

func (m *StaffRequest) GetEntryDate() int32 {
	if m != nil {
		return m.EntryDate
	}
	return 0
}

func (m *StaffRequest) GetShopId() []uint32 {
	if m != nil {
		return m.ShopId
	}
	return nil
}

func (m *StaffRequest) GetIsPermission() uint32 {
	if m != nil {
		return m.IsPermission
	}
	return 0
}

func (m *StaffRequest) GetGraduatedSchool() string {
	if m != nil {
		return m.GraduatedSchool
	}
	return ""
}

func (m *StaffRequest) GetGraduationTime() int32 {
	if m != nil {
		return m.GraduationTime
	}
	return 0
}

func (m *StaffRequest) GetEducation() uint32 {
	if m != nil {
		return m.Education
	}
	return 0
}

func (m *StaffRequest) GetProfession() string {
	if m != nil {
		return m.Profession
	}
	return ""
}

func (m *StaffRequest) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *StaffRequest) GetNativePlace() string {
	if m != nil {
		return m.NativePlace
	}
	return ""
}

func (m *StaffRequest) GetMarryStatus() uint32 {
	if m != nil {
		return m.MarryStatus
	}
	return 0
}

func (m *StaffRequest) GetChildrenStatus() uint32 {
	if m != nil {
		return m.ChildrenStatus
	}
	return 0
}

func (m *StaffRequest) GetProvinceId() uint32 {
	if m != nil {
		return m.ProvinceId
	}
	return 0
}

func (m *StaffRequest) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

func (m *StaffRequest) GetCityId() uint32 {
	if m != nil {
		return m.CityId
	}
	return 0
}

func (m *StaffRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *StaffRequest) GetDistrictId() uint32 {
	if m != nil {
		return m.DistrictId
	}
	return 0
}

func (m *StaffRequest) GetDistrictName() string {
	if m != nil {
		return m.DistrictName
	}
	return ""
}

func (m *StaffRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *StaffRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *StaffRequest) GetEmploymentTime() int32 {
	if m != nil {
		return m.EmploymentTime
	}
	return 0
}

func (m *StaffRequest) GetSpecialtyId() []uint32 {
	if m != nil {
		return m.SpecialtyId
	}
	return nil
}

func (m *StaffRequest) GetCertificationName() []string {
	if m != nil {
		return m.CertificationName
	}
	return nil
}

func (m *StaffRequest) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *StaffRequest) GetIsShow() uint32 {
	if m != nil {
		return m.IsShow
	}
	return 0
}

func (m *StaffRequest) GetAlbumId() uint32 {
	if m != nil {
		return m.AlbumId
	}
	return 0
}

func (m *StaffRequest) GetBrandId() uint32 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

func (m *StaffRequest) GetCurrentShop() uint32 {
	if m != nil {
		return m.CurrentShop
	}
	return 0
}

func (m *StaffRequest) GetCountryCodeId() uint32 {
	if m != nil {
		return m.CountryCodeId
	}
	return 0
}

func (m *StaffRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *StaffRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *StaffRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// 新增员工详细信息
type StaffResponse struct {
	// 公共响应状态
	Status               *common.BusinessStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *StaffResponse) Reset()         { *m = StaffResponse{} }
func (m *StaffResponse) String() string { return proto.CompactTextString(m) }
func (*StaffResponse) ProtoMessage()    {}
func (*StaffResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{1}
}
func (m *StaffResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaffResponse.Unmarshal(m, b)
}
func (m *StaffResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaffResponse.Marshal(b, m, deterministic)
}
func (dst *StaffResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaffResponse.Merge(dst, src)
}
func (m *StaffResponse) XXX_Size() int {
	return xxx_messageInfo_StaffResponse.Size(m)
}
func (m *StaffResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StaffResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StaffResponse proto.InternalMessageInfo

func (m *StaffResponse) GetStatus() *common.BusinessStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// 新增员工返回自增id
type CreateStaffResponse struct {
	// 公共响应状态
	Status *common.BusinessStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 员工id
	StaffId              uint32   `protobuf:"varint,2,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateStaffResponse) Reset()         { *m = CreateStaffResponse{} }
func (m *CreateStaffResponse) String() string { return proto.CompactTextString(m) }
func (*CreateStaffResponse) ProtoMessage()    {}
func (*CreateStaffResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{2}
}
func (m *CreateStaffResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStaffResponse.Unmarshal(m, b)
}
func (m *CreateStaffResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStaffResponse.Marshal(b, m, deterministic)
}
func (dst *CreateStaffResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStaffResponse.Merge(dst, src)
}
func (m *CreateStaffResponse) XXX_Size() int {
	return xxx_messageInfo_CreateStaffResponse.Size(m)
}
func (m *CreateStaffResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStaffResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStaffResponse proto.InternalMessageInfo

func (m *CreateStaffResponse) GetStatus() *common.BusinessStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateStaffResponse) GetStaffId() uint32 {
	if m != nil {
		return m.StaffId
	}
	return 0
}

// 获取商户员工详情请求体
type StaffInfoRequest struct {
	// 公共请求头
	Header *common.CommonHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// 员工id
	StaffId uint32 `protobuf:"varint,2,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	// 当前场馆id
	CurrentShop          uint32   `protobuf:"varint,3,opt,name=current_shop,json=currentShop,proto3" json:"current_shop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StaffInfoRequest) Reset()         { *m = StaffInfoRequest{} }
func (m *StaffInfoRequest) String() string { return proto.CompactTextString(m) }
func (*StaffInfoRequest) ProtoMessage()    {}
func (*StaffInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{3}
}
func (m *StaffInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaffInfoRequest.Unmarshal(m, b)
}
func (m *StaffInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaffInfoRequest.Marshal(b, m, deterministic)
}
func (dst *StaffInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaffInfoRequest.Merge(dst, src)
}
func (m *StaffInfoRequest) XXX_Size() int {
	return xxx_messageInfo_StaffInfoRequest.Size(m)
}
func (m *StaffInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StaffInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StaffInfoRequest proto.InternalMessageInfo

func (m *StaffInfoRequest) GetHeader() *common.CommonHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *StaffInfoRequest) GetStaffId() uint32 {
	if m != nil {
		return m.StaffId
	}
	return 0
}

func (m *StaffInfoRequest) GetCurrentShop() uint32 {
	if m != nil {
		return m.CurrentShop
	}
	return 0
}

// 员工详细信息
type StaffInfoResponse struct {
	// 公共响应状态
	Status *common.BusinessStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 员工id
	StaffId uint32 `protobuf:"varint,2,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	// 员工姓名
	StaffName string `protobuf:"bytes,3,opt,name=staff_name,json=staffName,proto3" json:"staff_name,omitempty"`
	// 昵称
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 手机号
	Mobile string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	// 员工工号
	StaffNum string `protobuf:"bytes,6,opt,name=staff_num,json=staffNum,proto3" json:"staff_num,omitempty"`
	// 性别
	StaffSex *StaffSex `protobuf:"bytes,7,opt,name=staff_sex,json=staffSex,proto3" json:"staff_sex,omitempty"`
	// 证件类型
	IdType *IdTypeResult `protobuf:"bytes,8,opt,name=id_type,json=idType,proto3" json:"id_type,omitempty"`
	// 证件号
	IdNum string `protobuf:"bytes,9,opt,name=id_num,json=idNum,proto3" json:"id_num,omitempty"`
	// 职务
	WorkingPost string `protobuf:"bytes,10,opt,name=working_post,json=workingPost,proto3" json:"working_post,omitempty"`
	// 身份
	Identity []*IdentityResult `protobuf:"bytes,11,rep,name=identity,proto3" json:"identity,omitempty"`
	// 教练等级
	CoachLevelId *CoachLevel `protobuf:"bytes,12,opt,name=coach_level_id,json=coachLevelId,proto3" json:"coach_level_id,omitempty"`
	// 工作性质
	NatureWork *NatureWorkResult `protobuf:"bytes,13,opt,name=nature_work,json=natureWork,proto3" json:"nature_work,omitempty"`
	// 入职时间
	EntryDate int32 `protobuf:"varint,14,opt,name=entry_date,json=entryDate,proto3" json:"entry_date,omitempty"`
	// 所属门店
	ShopId []*ShopResult `protobuf:"bytes,15,rep,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	// 系统权限
	IsPermission *PermissionResult `protobuf:"bytes,16,opt,name=is_permission,json=isPermission,proto3" json:"is_permission,omitempty"`
	// 毕业院校
	GraduatedSchool string `protobuf:"bytes,17,opt,name=graduated_school,json=graduatedSchool,proto3" json:"graduated_school,omitempty"`
	// 毕业时间
	GraduationTime int32 `protobuf:"varint,18,opt,name=graduation_time,json=graduationTime,proto3" json:"graduation_time,omitempty"`
	// 学历
	Education *EducationResult `protobuf:"bytes,19,opt,name=education,proto3" json:"education,omitempty"`
	// 专业
	Profession string `protobuf:"bytes,20,opt,name=profession,proto3" json:"profession,omitempty"`
	// 生日
	Birthday string `protobuf:"bytes,21,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// 籍贯
	NativePlace string `protobuf:"bytes,22,opt,name=native_place,json=nativePlace,proto3" json:"native_place,omitempty"`
	// 婚姻状态
	MarryStatus *MarryStatusResult `protobuf:"bytes,23,opt,name=marry_status,json=marryStatus,proto3" json:"marry_status,omitempty"`
	// 子女状况
	ChildrenStatus *ChildrenStatusResult `protobuf:"bytes,24,opt,name=children_status,json=childrenStatus,proto3" json:"children_status,omitempty"`
	// 省id
	ProvinceId uint32 `protobuf:"varint,25,opt,name=province_id,json=provinceId,proto3" json:"province_id,omitempty"`
	// 省会名称
	ProvinceName string `protobuf:"bytes,26,opt,name=province_name,json=provinceName,proto3" json:"province_name,omitempty"`
	// 城市id
	CityId uint32 `protobuf:"varint,27,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	// 城市名称
	CityName string `protobuf:"bytes,28,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`
	// 区域id
	DistrictId uint32 `protobuf:"varint,29,opt,name=district_id,json=districtId,proto3" json:"district_id,omitempty"`
	// 区域名称
	DistrictName string `protobuf:"bytes,30,opt,name=district_name,json=districtName,proto3" json:"district_name,omitempty"`
	// 详细地址
	Address string `protobuf:"bytes,31,opt,name=address,proto3" json:"address,omitempty"`
	// 备注
	Description string `protobuf:"bytes,32,opt,name=description,proto3" json:"description,omitempty"`
	// 从业时间
	EmploymentTime int32 `protobuf:"varint,33,opt,name=employment_time,json=employmentTime,proto3" json:"employment_time,omitempty"`
	// 擅长项目id
	SpecialtyId []*SpecialtyIdResult `protobuf:"bytes,34,rep,name=specialty_id,json=specialtyId,proto3" json:"specialty_id,omitempty"`
	// 专业认证
	CertificationName []*CertificationNameResult `protobuf:"bytes,35,rep,name=certification_name,json=certificationName,proto3" json:"certification_name,omitempty"`
	// 个人经历
	Introduction string `protobuf:"bytes,36,opt,name=introduction,proto3" json:"introduction,omitempty"`
	// 对外展示
	IsShow *IsShow `protobuf:"bytes,37,opt,name=is_show,json=isShow,proto3" json:"is_show,omitempty"`
	// 图片url or key
	ImagePersonal []*ImagesResult `protobuf:"bytes,38,rep,name=image_personal,json=imagePersonal,proto3" json:"image_personal,omitempty"`
	// 所属品牌id
	BrandId uint32 `protobuf:"varint,39,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	// 当前场馆id
	CurrentShop uint32 `protobuf:"varint,41,opt,name=current_shop,json=currentShop,proto3" json:"current_shop,omitempty"`
	// 国家编码id
	CountryCodeId *CountryCode `protobuf:"bytes,42,opt,name=country_code_id,json=countryCodeId,proto3" json:"country_code_id,omitempty"`
	// 员工头像id
	ImageAvatar *AvatarIdResult `protobuf:"bytes,43,opt,name=image_avatar,json=imageAvatar,proto3" json:"image_avatar,omitempty"`
	// 员工人脸id
	ImageFace *FaceIdResult `protobuf:"bytes,44,opt,name=image_face,json=imageFace,proto3" json:"image_face,omitempty"`
	// 在职状态
	WorkStatus *WorkStatusResult `protobuf:"bytes,45,opt,name=work_status,json=workStatus,proto3" json:"work_status,omitempty"`
	// 相册id
	AlbumId uint32 `protobuf:"varint,46,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	// 邮箱
	Email                string   `protobuf:"bytes,47,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StaffInfoResponse) Reset()         { *m = StaffInfoResponse{} }
func (m *StaffInfoResponse) String() string { return proto.CompactTextString(m) }
func (*StaffInfoResponse) ProtoMessage()    {}
func (*StaffInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{4}
}
func (m *StaffInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaffInfoResponse.Unmarshal(m, b)
}
func (m *StaffInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaffInfoResponse.Marshal(b, m, deterministic)
}
func (dst *StaffInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaffInfoResponse.Merge(dst, src)
}
func (m *StaffInfoResponse) XXX_Size() int {
	return xxx_messageInfo_StaffInfoResponse.Size(m)
}
func (m *StaffInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StaffInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StaffInfoResponse proto.InternalMessageInfo

func (m *StaffInfoResponse) GetStatus() *common.BusinessStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *StaffInfoResponse) GetStaffId() uint32 {
	if m != nil {
		return m.StaffId
	}
	return 0
}

func (m *StaffInfoResponse) GetStaffName() string {
	if m != nil {
		return m.StaffName
	}
	return ""
}

func (m *StaffInfoResponse) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *StaffInfoResponse) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *StaffInfoResponse) GetStaffNum() string {
	if m != nil {
		return m.StaffNum
	}
	return ""
}

func (m *StaffInfoResponse) GetStaffSex() *StaffSex {
	if m != nil {
		return m.StaffSex
	}
	return nil
}

func (m *StaffInfoResponse) GetIdType() *IdTypeResult {
	if m != nil {
		return m.IdType
	}
	return nil
}

func (m *StaffInfoResponse) GetIdNum() string {
	if m != nil {
		return m.IdNum
	}
	return ""
}

func (m *StaffInfoResponse) GetWorkingPost() string {
	if m != nil {
		return m.WorkingPost
	}
	return ""
}

func (m *StaffInfoResponse) GetIdentity() []*IdentityResult {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *StaffInfoResponse) GetCoachLevelId() *CoachLevel {
	if m != nil {
		return m.CoachLevelId
	}
	return nil
}

func (m *StaffInfoResponse) GetNatureWork() *NatureWorkResult {
	if m != nil {
		return m.NatureWork
	}
	return nil
}

func (m *StaffInfoResponse) GetEntryDate() int32 {
	if m != nil {
		return m.EntryDate
	}
	return 0
}

func (m *StaffInfoResponse) GetShopId() []*ShopResult {
	if m != nil {
		return m.ShopId
	}
	return nil
}

func (m *StaffInfoResponse) GetIsPermission() *PermissionResult {
	if m != nil {
		return m.IsPermission
	}
	return nil
}

func (m *StaffInfoResponse) GetGraduatedSchool() string {
	if m != nil {
		return m.GraduatedSchool
	}
	return ""
}

func (m *StaffInfoResponse) GetGraduationTime() int32 {
	if m != nil {
		return m.GraduationTime
	}
	return 0
}

func (m *StaffInfoResponse) GetEducation() *EducationResult {
	if m != nil {
		return m.Education
	}
	return nil
}

func (m *StaffInfoResponse) GetProfession() string {
	if m != nil {
		return m.Profession
	}
	return ""
}

func (m *StaffInfoResponse) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *StaffInfoResponse) GetNativePlace() string {
	if m != nil {
		return m.NativePlace
	}
	return ""
}

func (m *StaffInfoResponse) GetMarryStatus() *MarryStatusResult {
	if m != nil {
		return m.MarryStatus
	}
	return nil
}

func (m *StaffInfoResponse) GetChildrenStatus() *ChildrenStatusResult {
	if m != nil {
		return m.ChildrenStatus
	}
	return nil
}

func (m *StaffInfoResponse) GetProvinceId() uint32 {
	if m != nil {
		return m.ProvinceId
	}
	return 0
}

func (m *StaffInfoResponse) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

func (m *StaffInfoResponse) GetCityId() uint32 {
	if m != nil {
		return m.CityId
	}
	return 0
}

func (m *StaffInfoResponse) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *StaffInfoResponse) GetDistrictId() uint32 {
	if m != nil {
		return m.DistrictId
	}
	return 0
}

func (m *StaffInfoResponse) GetDistrictName() string {
	if m != nil {
		return m.DistrictName
	}
	return ""
}

func (m *StaffInfoResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *StaffInfoResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *StaffInfoResponse) GetEmploymentTime() int32 {
	if m != nil {
		return m.EmploymentTime
	}
	return 0
}

func (m *StaffInfoResponse) GetSpecialtyId() []*SpecialtyIdResult {
	if m != nil {
		return m.SpecialtyId
	}
	return nil
}

func (m *StaffInfoResponse) GetCertificationName() []*CertificationNameResult {
	if m != nil {
		return m.CertificationName
	}
	return nil
}

func (m *StaffInfoResponse) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *StaffInfoResponse) GetIsShow() *IsShow {
	if m != nil {
		return m.IsShow
	}
	return nil
}

func (m *StaffInfoResponse) GetImagePersonal() []*ImagesResult {
	if m != nil {
		return m.ImagePersonal
	}
	return nil
}

func (m *StaffInfoResponse) GetBrandId() uint32 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

func (m *StaffInfoResponse) GetCurrentShop() uint32 {
	if m != nil {
		return m.CurrentShop
	}
	return 0
}

func (m *StaffInfoResponse) GetCountryCodeId() *CountryCode {
	if m != nil {
		return m.CountryCodeId
	}
	return nil
}

func (m *StaffInfoResponse) GetImageAvatar() *AvatarIdResult {
	if m != nil {
		return m.ImageAvatar
	}
	return nil
}

func (m *StaffInfoResponse) GetImageFace() *FaceIdResult {
	if m != nil {
		return m.ImageFace
	}
	return nil
}

func (m *StaffInfoResponse) GetWorkStatus() *WorkStatusResult {
	if m != nil {
		return m.WorkStatus
	}
	return nil
}

func (m *StaffInfoResponse) GetAlbumId() uint32 {
	if m != nil {
		return m.AlbumId
	}
	return 0
}

func (m *StaffInfoResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// 性别
type StaffSex struct {
	// 类型id
	SexType uint32 `protobuf:"varint,1,opt,name=sex_type,json=sexType,proto3" json:"sex_type,omitempty"`
	// 类型名称
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StaffSex) Reset()         { *m = StaffSex{} }
func (m *StaffSex) String() string { return proto.CompactTextString(m) }
func (*StaffSex) ProtoMessage()    {}
func (*StaffSex) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{5}
}
func (m *StaffSex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaffSex.Unmarshal(m, b)
}
func (m *StaffSex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaffSex.Marshal(b, m, deterministic)
}
func (dst *StaffSex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaffSex.Merge(dst, src)
}
func (m *StaffSex) XXX_Size() int {
	return xxx_messageInfo_StaffSex.Size(m)
}
func (m *StaffSex) XXX_DiscardUnknown() {
	xxx_messageInfo_StaffSex.DiscardUnknown(m)
}

var xxx_messageInfo_StaffSex proto.InternalMessageInfo

func (m *StaffSex) GetSexType() uint32 {
	if m != nil {
		return m.SexType
	}
	return 0
}

func (m *StaffSex) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 国家编码
type CountryCode struct {
	// 类型id
	CountryId uint32 `protobuf:"varint,1,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	// 类型名称
	CountryCode          uint32   `protobuf:"varint,2,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountryCode) Reset()         { *m = CountryCode{} }
func (m *CountryCode) String() string { return proto.CompactTextString(m) }
func (*CountryCode) ProtoMessage()    {}
func (*CountryCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{6}
}
func (m *CountryCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryCode.Unmarshal(m, b)
}
func (m *CountryCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryCode.Marshal(b, m, deterministic)
}
func (dst *CountryCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryCode.Merge(dst, src)
}
func (m *CountryCode) XXX_Size() int {
	return xxx_messageInfo_CountryCode.Size(m)
}
func (m *CountryCode) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryCode.DiscardUnknown(m)
}

var xxx_messageInfo_CountryCode proto.InternalMessageInfo

func (m *CountryCode) GetCountryId() uint32 {
	if m != nil {
		return m.CountryId
	}
	return 0
}

func (m *CountryCode) GetCountryCode() uint32 {
	if m != nil {
		return m.CountryCode
	}
	return 0
}

// 身份
type IdentityResult struct {
	// 类型id
	IdentityType uint32 `protobuf:"varint,1,opt,name=identity_type,json=identityType,proto3" json:"identity_type,omitempty"`
	// 类型名称
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentityResult) Reset()         { *m = IdentityResult{} }
func (m *IdentityResult) String() string { return proto.CompactTextString(m) }
func (*IdentityResult) ProtoMessage()    {}
func (*IdentityResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{7}
}
func (m *IdentityResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentityResult.Unmarshal(m, b)
}
func (m *IdentityResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentityResult.Marshal(b, m, deterministic)
}
func (dst *IdentityResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentityResult.Merge(dst, src)
}
func (m *IdentityResult) XXX_Size() int {
	return xxx_messageInfo_IdentityResult.Size(m)
}
func (m *IdentityResult) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentityResult.DiscardUnknown(m)
}

var xxx_messageInfo_IdentityResult proto.InternalMessageInfo

func (m *IdentityResult) GetIdentityType() uint32 {
	if m != nil {
		return m.IdentityType
	}
	return 0
}

func (m *IdentityResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 教练等级
type CoachLevel struct {
	// 类型id
	CoachLevelType uint32 `protobuf:"varint,1,opt,name=coach_level_type,json=coachLevelType,proto3" json:"coach_level_type,omitempty"`
	// 类型名称
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoachLevel) Reset()         { *m = CoachLevel{} }
func (m *CoachLevel) String() string { return proto.CompactTextString(m) }
func (*CoachLevel) ProtoMessage()    {}
func (*CoachLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{8}
}
func (m *CoachLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoachLevel.Unmarshal(m, b)
}
func (m *CoachLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoachLevel.Marshal(b, m, deterministic)
}
func (dst *CoachLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoachLevel.Merge(dst, src)
}
func (m *CoachLevel) XXX_Size() int {
	return xxx_messageInfo_CoachLevel.Size(m)
}
func (m *CoachLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_CoachLevel.DiscardUnknown(m)
}

var xxx_messageInfo_CoachLevel proto.InternalMessageInfo

func (m *CoachLevel) GetCoachLevelType() uint32 {
	if m != nil {
		return m.CoachLevelType
	}
	return 0
}

func (m *CoachLevel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 证件类型
type IdTypeResult struct {
	// 类型id
	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 类型名称
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdTypeResult) Reset()         { *m = IdTypeResult{} }
func (m *IdTypeResult) String() string { return proto.CompactTextString(m) }
func (*IdTypeResult) ProtoMessage()    {}
func (*IdTypeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{9}
}
func (m *IdTypeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdTypeResult.Unmarshal(m, b)
}
func (m *IdTypeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdTypeResult.Marshal(b, m, deterministic)
}
func (dst *IdTypeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdTypeResult.Merge(dst, src)
}
func (m *IdTypeResult) XXX_Size() int {
	return xxx_messageInfo_IdTypeResult.Size(m)
}
func (m *IdTypeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_IdTypeResult.DiscardUnknown(m)
}

var xxx_messageInfo_IdTypeResult proto.InternalMessageInfo

func (m *IdTypeResult) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *IdTypeResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 所属门店
type ShopResult struct {
	// 类型id
	ShopId uint32 `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	// 类型名称
	ShopName             string   `protobuf:"bytes,2,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopResult) Reset()         { *m = ShopResult{} }
func (m *ShopResult) String() string { return proto.CompactTextString(m) }
func (*ShopResult) ProtoMessage()    {}
func (*ShopResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{10}
}
func (m *ShopResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopResult.Unmarshal(m, b)
}
func (m *ShopResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopResult.Marshal(b, m, deterministic)
}
func (dst *ShopResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopResult.Merge(dst, src)
}
func (m *ShopResult) XXX_Size() int {
	return xxx_messageInfo_ShopResult.Size(m)
}
func (m *ShopResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopResult.DiscardUnknown(m)
}

var xxx_messageInfo_ShopResult proto.InternalMessageInfo

func (m *ShopResult) GetShopId() uint32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *ShopResult) GetShopName() string {
	if m != nil {
		return m.ShopName
	}
	return ""
}

// 学历
type EducationResult struct {
	// 类型id
	EducationType uint32 `protobuf:"varint,1,opt,name=education_type,json=educationType,proto3" json:"education_type,omitempty"`
	// 类型名称
	EducationName        string   `protobuf:"bytes,2,opt,name=education_name,json=educationName,proto3" json:"education_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EducationResult) Reset()         { *m = EducationResult{} }
func (m *EducationResult) String() string { return proto.CompactTextString(m) }
func (*EducationResult) ProtoMessage()    {}
func (*EducationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{11}
}
func (m *EducationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EducationResult.Unmarshal(m, b)
}
func (m *EducationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EducationResult.Marshal(b, m, deterministic)
}
func (dst *EducationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EducationResult.Merge(dst, src)
}
func (m *EducationResult) XXX_Size() int {
	return xxx_messageInfo_EducationResult.Size(m)
}
func (m *EducationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_EducationResult.DiscardUnknown(m)
}

var xxx_messageInfo_EducationResult proto.InternalMessageInfo

func (m *EducationResult) GetEducationType() uint32 {
	if m != nil {
		return m.EducationType
	}
	return 0
}

func (m *EducationResult) GetEducationName() string {
	if m != nil {
		return m.EducationName
	}
	return ""
}

// 婚姻
type MarryStatusResult struct {
	// 类型id
	MarryType uint32 `protobuf:"varint,1,opt,name=marry_type,json=marryType,proto3" json:"marry_type,omitempty"`
	// 类型名称
	MarryName            string   `protobuf:"bytes,2,opt,name=marry_name,json=marryName,proto3" json:"marry_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarryStatusResult) Reset()         { *m = MarryStatusResult{} }
func (m *MarryStatusResult) String() string { return proto.CompactTextString(m) }
func (*MarryStatusResult) ProtoMessage()    {}
func (*MarryStatusResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{12}
}
func (m *MarryStatusResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarryStatusResult.Unmarshal(m, b)
}
func (m *MarryStatusResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarryStatusResult.Marshal(b, m, deterministic)
}
func (dst *MarryStatusResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarryStatusResult.Merge(dst, src)
}
func (m *MarryStatusResult) XXX_Size() int {
	return xxx_messageInfo_MarryStatusResult.Size(m)
}
func (m *MarryStatusResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MarryStatusResult.DiscardUnknown(m)
}

var xxx_messageInfo_MarryStatusResult proto.InternalMessageInfo

func (m *MarryStatusResult) GetMarryType() uint32 {
	if m != nil {
		return m.MarryType
	}
	return 0
}

func (m *MarryStatusResult) GetMarryName() string {
	if m != nil {
		return m.MarryName
	}
	return ""
}

// 子女状态
type ChildrenStatusResult struct {
	// 类型id
	ChildrenType uint32 `protobuf:"varint,1,opt,name=children_type,json=childrenType,proto3" json:"children_type,omitempty"`
	// 类型名称
	ChildrenName         string   `protobuf:"bytes,2,opt,name=children_name,json=childrenName,proto3" json:"children_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChildrenStatusResult) Reset()         { *m = ChildrenStatusResult{} }
func (m *ChildrenStatusResult) String() string { return proto.CompactTextString(m) }
func (*ChildrenStatusResult) ProtoMessage()    {}
func (*ChildrenStatusResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{13}
}
func (m *ChildrenStatusResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChildrenStatusResult.Unmarshal(m, b)
}
func (m *ChildrenStatusResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChildrenStatusResult.Marshal(b, m, deterministic)
}
func (dst *ChildrenStatusResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChildrenStatusResult.Merge(dst, src)
}
func (m *ChildrenStatusResult) XXX_Size() int {
	return xxx_messageInfo_ChildrenStatusResult.Size(m)
}
func (m *ChildrenStatusResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ChildrenStatusResult.DiscardUnknown(m)
}

var xxx_messageInfo_ChildrenStatusResult proto.InternalMessageInfo

func (m *ChildrenStatusResult) GetChildrenType() uint32 {
	if m != nil {
		return m.ChildrenType
	}
	return 0
}

func (m *ChildrenStatusResult) GetChildrenName() string {
	if m != nil {
		return m.ChildrenName
	}
	return ""
}

// 擅长项目
type SpecialtyIdResult struct {
	// 类型id
	SpecialtyType uint32 `protobuf:"varint,1,opt,name=specialty_type,json=specialtyType,proto3" json:"specialty_type,omitempty"`
	// 类型名称
	SpecialtyName        string   `protobuf:"bytes,2,opt,name=specialty_name,json=specialtyName,proto3" json:"specialty_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpecialtyIdResult) Reset()         { *m = SpecialtyIdResult{} }
func (m *SpecialtyIdResult) String() string { return proto.CompactTextString(m) }
func (*SpecialtyIdResult) ProtoMessage()    {}
func (*SpecialtyIdResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{14}
}
func (m *SpecialtyIdResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecialtyIdResult.Unmarshal(m, b)
}
func (m *SpecialtyIdResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecialtyIdResult.Marshal(b, m, deterministic)
}
func (dst *SpecialtyIdResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecialtyIdResult.Merge(dst, src)
}
func (m *SpecialtyIdResult) XXX_Size() int {
	return xxx_messageInfo_SpecialtyIdResult.Size(m)
}
func (m *SpecialtyIdResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecialtyIdResult.DiscardUnknown(m)
}

var xxx_messageInfo_SpecialtyIdResult proto.InternalMessageInfo

func (m *SpecialtyIdResult) GetSpecialtyType() uint32 {
	if m != nil {
		return m.SpecialtyType
	}
	return 0
}

func (m *SpecialtyIdResult) GetSpecialtyName() string {
	if m != nil {
		return m.SpecialtyName
	}
	return ""
}

// 专业认证
type CertificationNameResult struct {
	// 类型id
	CertificationType uint32 `protobuf:"varint,1,opt,name=certification_type,json=certificationType,proto3" json:"certification_type,omitempty"`
	// 类型名称
	CertificationName    string   `protobuf:"bytes,2,opt,name=certification_name,json=certificationName,proto3" json:"certification_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertificationNameResult) Reset()         { *m = CertificationNameResult{} }
func (m *CertificationNameResult) String() string { return proto.CompactTextString(m) }
func (*CertificationNameResult) ProtoMessage()    {}
func (*CertificationNameResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{15}
}
func (m *CertificationNameResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificationNameResult.Unmarshal(m, b)
}
func (m *CertificationNameResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificationNameResult.Marshal(b, m, deterministic)
}
func (dst *CertificationNameResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificationNameResult.Merge(dst, src)
}
func (m *CertificationNameResult) XXX_Size() int {
	return xxx_messageInfo_CertificationNameResult.Size(m)
}
func (m *CertificationNameResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificationNameResult.DiscardUnknown(m)
}

var xxx_messageInfo_CertificationNameResult proto.InternalMessageInfo

func (m *CertificationNameResult) GetCertificationType() uint32 {
	if m != nil {
		return m.CertificationType
	}
	return 0
}

func (m *CertificationNameResult) GetCertificationName() string {
	if m != nil {
		return m.CertificationName
	}
	return ""
}

// 员工风采
type ImagesResult struct {
	// 类型id
	ImageId uint32 `protobuf:"varint,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// 类型名称
	ImageUrl             string   `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImagesResult) Reset()         { *m = ImagesResult{} }
func (m *ImagesResult) String() string { return proto.CompactTextString(m) }
func (*ImagesResult) ProtoMessage()    {}
func (*ImagesResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{16}
}
func (m *ImagesResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImagesResult.Unmarshal(m, b)
}
func (m *ImagesResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImagesResult.Marshal(b, m, deterministic)
}
func (dst *ImagesResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImagesResult.Merge(dst, src)
}
func (m *ImagesResult) XXX_Size() int {
	return xxx_messageInfo_ImagesResult.Size(m)
}
func (m *ImagesResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ImagesResult.DiscardUnknown(m)
}

var xxx_messageInfo_ImagesResult proto.InternalMessageInfo

func (m *ImagesResult) GetImageId() uint32 {
	if m != nil {
		return m.ImageId
	}
	return 0
}

func (m *ImagesResult) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

// 员工头像
type AvatarIdResult struct {
	// 类型id
	ImageId uint32 `protobuf:"varint,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// 类型名称
	ImageUrl             string   `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvatarIdResult) Reset()         { *m = AvatarIdResult{} }
func (m *AvatarIdResult) String() string { return proto.CompactTextString(m) }
func (*AvatarIdResult) ProtoMessage()    {}
func (*AvatarIdResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{17}
}
func (m *AvatarIdResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvatarIdResult.Unmarshal(m, b)
}
func (m *AvatarIdResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvatarIdResult.Marshal(b, m, deterministic)
}
func (dst *AvatarIdResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvatarIdResult.Merge(dst, src)
}
func (m *AvatarIdResult) XXX_Size() int {
	return xxx_messageInfo_AvatarIdResult.Size(m)
}
func (m *AvatarIdResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AvatarIdResult.DiscardUnknown(m)
}

var xxx_messageInfo_AvatarIdResult proto.InternalMessageInfo

func (m *AvatarIdResult) GetImageId() uint32 {
	if m != nil {
		return m.ImageId
	}
	return 0
}

func (m *AvatarIdResult) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

// 员工人脸
type FaceIdResult struct {
	// 类型id
	ImageId uint32 `protobuf:"varint,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// 类型名称
	ImageUrl             string   `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaceIdResult) Reset()         { *m = FaceIdResult{} }
func (m *FaceIdResult) String() string { return proto.CompactTextString(m) }
func (*FaceIdResult) ProtoMessage()    {}
func (*FaceIdResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{18}
}
func (m *FaceIdResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceIdResult.Unmarshal(m, b)
}
func (m *FaceIdResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceIdResult.Marshal(b, m, deterministic)
}
func (dst *FaceIdResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceIdResult.Merge(dst, src)
}
func (m *FaceIdResult) XXX_Size() int {
	return xxx_messageInfo_FaceIdResult.Size(m)
}
func (m *FaceIdResult) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceIdResult.DiscardUnknown(m)
}

var xxx_messageInfo_FaceIdResult proto.InternalMessageInfo

func (m *FaceIdResult) GetImageId() uint32 {
	if m != nil {
		return m.ImageId
	}
	return 0
}

func (m *FaceIdResult) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

// 在职状态
type WorkStatusResult struct {
	// 类型id
	WorkId uint32 `protobuf:"varint,1,opt,name=work_id,json=workId,proto3" json:"work_id,omitempty"`
	// 类型名称
	WorkName             string   `protobuf:"bytes,2,opt,name=work_name,json=workName,proto3" json:"work_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkStatusResult) Reset()         { *m = WorkStatusResult{} }
func (m *WorkStatusResult) String() string { return proto.CompactTextString(m) }
func (*WorkStatusResult) ProtoMessage()    {}
func (*WorkStatusResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{19}
}
func (m *WorkStatusResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkStatusResult.Unmarshal(m, b)
}
func (m *WorkStatusResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkStatusResult.Marshal(b, m, deterministic)
}
func (dst *WorkStatusResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkStatusResult.Merge(dst, src)
}
func (m *WorkStatusResult) XXX_Size() int {
	return xxx_messageInfo_WorkStatusResult.Size(m)
}
func (m *WorkStatusResult) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkStatusResult.DiscardUnknown(m)
}

var xxx_messageInfo_WorkStatusResult proto.InternalMessageInfo

func (m *WorkStatusResult) GetWorkId() uint32 {
	if m != nil {
		return m.WorkId
	}
	return 0
}

func (m *WorkStatusResult) GetWorkName() string {
	if m != nil {
		return m.WorkName
	}
	return ""
}

// 工作性质
type NatureWorkResult struct {
	// 类型id
	WorkId uint32 `protobuf:"varint,1,opt,name=work_id,json=workId,proto3" json:"work_id,omitempty"`
	// 类型名称
	WorkName             string   `protobuf:"bytes,2,opt,name=work_name,json=workName,proto3" json:"work_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NatureWorkResult) Reset()         { *m = NatureWorkResult{} }
func (m *NatureWorkResult) String() string { return proto.CompactTextString(m) }
func (*NatureWorkResult) ProtoMessage()    {}
func (*NatureWorkResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{20}
}
func (m *NatureWorkResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NatureWorkResult.Unmarshal(m, b)
}
func (m *NatureWorkResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NatureWorkResult.Marshal(b, m, deterministic)
}
func (dst *NatureWorkResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NatureWorkResult.Merge(dst, src)
}
func (m *NatureWorkResult) XXX_Size() int {
	return xxx_messageInfo_NatureWorkResult.Size(m)
}
func (m *NatureWorkResult) XXX_DiscardUnknown() {
	xxx_messageInfo_NatureWorkResult.DiscardUnknown(m)
}

var xxx_messageInfo_NatureWorkResult proto.InternalMessageInfo

func (m *NatureWorkResult) GetWorkId() uint32 {
	if m != nil {
		return m.WorkId
	}
	return 0
}

func (m *NatureWorkResult) GetWorkName() string {
	if m != nil {
		return m.WorkName
	}
	return ""
}

// 系统权限
type PermissionResult struct {
	// 类型id
	PermissionType uint32 `protobuf:"varint,1,opt,name=permission_type,json=permissionType,proto3" json:"permission_type,omitempty"`
	// 类型名称
	PermissionName       string   `protobuf:"bytes,2,opt,name=permission_name,json=permissionName,proto3" json:"permission_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionResult) Reset()         { *m = PermissionResult{} }
func (m *PermissionResult) String() string { return proto.CompactTextString(m) }
func (*PermissionResult) ProtoMessage()    {}
func (*PermissionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{21}
}
func (m *PermissionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionResult.Unmarshal(m, b)
}
func (m *PermissionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionResult.Marshal(b, m, deterministic)
}
func (dst *PermissionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionResult.Merge(dst, src)
}
func (m *PermissionResult) XXX_Size() int {
	return xxx_messageInfo_PermissionResult.Size(m)
}
func (m *PermissionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionResult.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionResult proto.InternalMessageInfo

func (m *PermissionResult) GetPermissionType() uint32 {
	if m != nil {
		return m.PermissionType
	}
	return 0
}

func (m *PermissionResult) GetPermissionName() string {
	if m != nil {
		return m.PermissionName
	}
	return ""
}

// 对外展示
type IsShow struct {
	// 类型id
	ShowType uint32 `protobuf:"varint,1,opt,name=show_type,json=showType,proto3" json:"show_type,omitempty"`
	// 类型名称
	ShowName             string   `protobuf:"bytes,2,opt,name=show_name,json=showName,proto3" json:"show_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsShow) Reset()         { *m = IsShow{} }
func (m *IsShow) String() string { return proto.CompactTextString(m) }
func (*IsShow) ProtoMessage()    {}
func (*IsShow) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{22}
}
func (m *IsShow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsShow.Unmarshal(m, b)
}
func (m *IsShow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsShow.Marshal(b, m, deterministic)
}
func (dst *IsShow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsShow.Merge(dst, src)
}
func (m *IsShow) XXX_Size() int {
	return xxx_messageInfo_IsShow.Size(m)
}
func (m *IsShow) XXX_DiscardUnknown() {
	xxx_messageInfo_IsShow.DiscardUnknown(m)
}

var xxx_messageInfo_IsShow proto.InternalMessageInfo

func (m *IsShow) GetShowType() uint32 {
	if m != nil {
		return m.ShowType
	}
	return 0
}

func (m *IsShow) GetShowName() string {
	if m != nil {
		return m.ShowName
	}
	return ""
}

// 员工账户信息返回
type StaffAccountResponse struct {
	// 公共响应状态
	Status *common.BusinessStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 员工姓名
	StaffName string `protobuf:"bytes,2,opt,name=staff_name,json=staffName,proto3" json:"staff_name,omitempty"`
	// 账户名称
	AccountName string `protobuf:"bytes,3,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// 银行卡号
	CardNumber string `protobuf:"bytes,4,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	// 开户银行
	BankName string `protobuf:"bytes,5,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	// 开户id
	AccountId            uint32   `protobuf:"varint,6,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StaffAccountResponse) Reset()         { *m = StaffAccountResponse{} }
func (m *StaffAccountResponse) String() string { return proto.CompactTextString(m) }
func (*StaffAccountResponse) ProtoMessage()    {}
func (*StaffAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{23}
}
func (m *StaffAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaffAccountResponse.Unmarshal(m, b)
}
func (m *StaffAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaffAccountResponse.Marshal(b, m, deterministic)
}
func (dst *StaffAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaffAccountResponse.Merge(dst, src)
}
func (m *StaffAccountResponse) XXX_Size() int {
	return xxx_messageInfo_StaffAccountResponse.Size(m)
}
func (m *StaffAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StaffAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StaffAccountResponse proto.InternalMessageInfo

func (m *StaffAccountResponse) GetStatus() *common.BusinessStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *StaffAccountResponse) GetStaffName() string {
	if m != nil {
		return m.StaffName
	}
	return ""
}

func (m *StaffAccountResponse) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *StaffAccountResponse) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *StaffAccountResponse) GetBankName() string {
	if m != nil {
		return m.BankName
	}
	return ""
}

func (m *StaffAccountResponse) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

// 员工账户添加请求
type StaffBankRequest struct {
	// 公共请求头
	Header *common.CommonHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// 员工id
	StaffId uint32 `protobuf:"varint,2,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	// 账户名称
	AccountName string `protobuf:"bytes,3,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// 银行卡号
	CardNumber string `protobuf:"bytes,4,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	// 开户银行
	BankName string `protobuf:"bytes,5,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	// 开户id
	AccountId uint32 `protobuf:"varint,6,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// 品牌id
	BrandId              uint32   `protobuf:"varint,7,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StaffBankRequest) Reset()         { *m = StaffBankRequest{} }
func (m *StaffBankRequest) String() string { return proto.CompactTextString(m) }
func (*StaffBankRequest) ProtoMessage()    {}
func (*StaffBankRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{24}
}
func (m *StaffBankRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaffBankRequest.Unmarshal(m, b)
}
func (m *StaffBankRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaffBankRequest.Marshal(b, m, deterministic)
}
func (dst *StaffBankRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaffBankRequest.Merge(dst, src)
}
func (m *StaffBankRequest) XXX_Size() int {
	return xxx_messageInfo_StaffBankRequest.Size(m)
}
func (m *StaffBankRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StaffBankRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StaffBankRequest proto.InternalMessageInfo

func (m *StaffBankRequest) GetHeader() *common.CommonHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *StaffBankRequest) GetStaffId() uint32 {
	if m != nil {
		return m.StaffId
	}
	return 0
}

func (m *StaffBankRequest) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *StaffBankRequest) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *StaffBankRequest) GetBankName() string {
	if m != nil {
		return m.BankName
	}
	return ""
}

func (m *StaffBankRequest) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *StaffBankRequest) GetBrandId() uint32 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

// 员工职位返回信息
type StaffPositionResponse struct {
	// 公共响应状态
	Status *common.BusinessStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 工作新增
	NatureWork *NatureWorkResult `protobuf:"bytes,2,opt,name=nature_work,json=natureWork,proto3" json:"nature_work,omitempty"`
	// 员工职能
	Identity []*IdentityResult `protobuf:"bytes,3,rep,name=identity,proto3" json:"identity,omitempty"`
	// 教练等级
	CoachLevelId *CoachLevel `protobuf:"bytes,4,opt,name=coach_level_id,json=coachLevelId,proto3" json:"coach_level_id,omitempty"`
	// 员工姓名
	StaffName            string   `protobuf:"bytes,5,opt,name=staff_name,json=staffName,proto3" json:"staff_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StaffPositionResponse) Reset()         { *m = StaffPositionResponse{} }
func (m *StaffPositionResponse) String() string { return proto.CompactTextString(m) }
func (*StaffPositionResponse) ProtoMessage()    {}
func (*StaffPositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{25}
}
func (m *StaffPositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaffPositionResponse.Unmarshal(m, b)
}
func (m *StaffPositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaffPositionResponse.Marshal(b, m, deterministic)
}
func (dst *StaffPositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaffPositionResponse.Merge(dst, src)
}
func (m *StaffPositionResponse) XXX_Size() int {
	return xxx_messageInfo_StaffPositionResponse.Size(m)
}
func (m *StaffPositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StaffPositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StaffPositionResponse proto.InternalMessageInfo

func (m *StaffPositionResponse) GetStatus() *common.BusinessStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *StaffPositionResponse) GetNatureWork() *NatureWorkResult {
	if m != nil {
		return m.NatureWork
	}
	return nil
}

func (m *StaffPositionResponse) GetIdentity() []*IdentityResult {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *StaffPositionResponse) GetCoachLevelId() *CoachLevel {
	if m != nil {
		return m.CoachLevelId
	}
	return nil
}

func (m *StaffPositionResponse) GetStaffName() string {
	if m != nil {
		return m.StaffName
	}
	return ""
}

// 员工职位请求
type StaffPositionRequest struct {
	// 公共请求头
	Header *common.CommonHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// 员工id
	StaffId uint32 `protobuf:"varint,2,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	// 工作性质
	NatureWork uint32 `protobuf:"varint,3,opt,name=nature_work,json=natureWork,proto3" json:"nature_work,omitempty"`
	// 教练等级
	CoachLevelId uint32 `protobuf:"varint,4,opt,name=coach_level_id,json=coachLevelId,proto3" json:"coach_level_id,omitempty"`
	// 员工身份 -职能
	Identity             []int32  `protobuf:"varint,5,rep,packed,name=identity,proto3" json:"identity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StaffPositionRequest) Reset()         { *m = StaffPositionRequest{} }
func (m *StaffPositionRequest) String() string { return proto.CompactTextString(m) }
func (*StaffPositionRequest) ProtoMessage()    {}
func (*StaffPositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_staff_396e9fcfeb9fb2b2, []int{26}
}
func (m *StaffPositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaffPositionRequest.Unmarshal(m, b)
}
func (m *StaffPositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaffPositionRequest.Marshal(b, m, deterministic)
}
func (dst *StaffPositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaffPositionRequest.Merge(dst, src)
}
func (m *StaffPositionRequest) XXX_Size() int {
	return xxx_messageInfo_StaffPositionRequest.Size(m)
}
func (m *StaffPositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StaffPositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StaffPositionRequest proto.InternalMessageInfo

func (m *StaffPositionRequest) GetHeader() *common.CommonHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *StaffPositionRequest) GetStaffId() uint32 {
	if m != nil {
		return m.StaffId
	}
	return 0
}

func (m *StaffPositionRequest) GetNatureWork() uint32 {
	if m != nil {
		return m.NatureWork
	}
	return 0
}

func (m *StaffPositionRequest) GetCoachLevelId() uint32 {
	if m != nil {
		return m.CoachLevelId
	}
	return 0
}

func (m *StaffPositionRequest) GetIdentity() []int32 {
	if m != nil {
		return m.Identity
	}
	return nil
}

func init() {
	proto.RegisterType((*StaffRequest)(nil), "staff.StaffRequest")
	proto.RegisterType((*StaffResponse)(nil), "staff.StaffResponse")
	proto.RegisterType((*CreateStaffResponse)(nil), "staff.CreateStaffResponse")
	proto.RegisterType((*StaffInfoRequest)(nil), "staff.StaffInfoRequest")
	proto.RegisterType((*StaffInfoResponse)(nil), "staff.StaffInfoResponse")
	proto.RegisterType((*StaffSex)(nil), "staff.StaffSex")
	proto.RegisterType((*CountryCode)(nil), "staff.CountryCode")
	proto.RegisterType((*IdentityResult)(nil), "staff.IdentityResult")
	proto.RegisterType((*CoachLevel)(nil), "staff.CoachLevel")
	proto.RegisterType((*IdTypeResult)(nil), "staff.IdTypeResult")
	proto.RegisterType((*ShopResult)(nil), "staff.ShopResult")
	proto.RegisterType((*EducationResult)(nil), "staff.EducationResult")
	proto.RegisterType((*MarryStatusResult)(nil), "staff.MarryStatusResult")
	proto.RegisterType((*ChildrenStatusResult)(nil), "staff.ChildrenStatusResult")
	proto.RegisterType((*SpecialtyIdResult)(nil), "staff.SpecialtyIdResult")
	proto.RegisterType((*CertificationNameResult)(nil), "staff.CertificationNameResult")
	proto.RegisterType((*ImagesResult)(nil), "staff.ImagesResult")
	proto.RegisterType((*AvatarIdResult)(nil), "staff.AvatarIdResult")
	proto.RegisterType((*FaceIdResult)(nil), "staff.FaceIdResult")
	proto.RegisterType((*WorkStatusResult)(nil), "staff.WorkStatusResult")
	proto.RegisterType((*NatureWorkResult)(nil), "staff.NatureWorkResult")
	proto.RegisterType((*PermissionResult)(nil), "staff.PermissionResult")
	proto.RegisterType((*IsShow)(nil), "staff.IsShow")
	proto.RegisterType((*StaffAccountResponse)(nil), "staff.StaffAccountResponse")
	proto.RegisterType((*StaffBankRequest)(nil), "staff.StaffBankRequest")
	proto.RegisterType((*StaffPositionResponse)(nil), "staff.StaffPositionResponse")
	proto.RegisterType((*StaffPositionRequest)(nil), "staff.StaffPositionRequest")
	proto.RegisterEnum("staff.JobStatus", JobStatus_name, JobStatus_value)
	proto.RegisterEnum("staff.StaffType", StaffType_name, StaffType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StaffServerClient is the client API for StaffServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StaffServerClient interface {
	// 获取商户员工详情
	GetStaffInfo(ctx context.Context, opts ...grpc.CallOption) (StaffServer_GetStaffInfoClient, error)
	// 新增员工信息服务
	CreateStaffServices(ctx context.Context, opts ...grpc.CallOption) (StaffServer_CreateStaffServicesClient, error)
	// 更新员工信息服务
	UpdateStaffServices(ctx context.Context, opts ...grpc.CallOption) (StaffServer_UpdateStaffServicesClient, error)
	// 更新员工详细信息
	UpdateStaffDetailedServices(ctx context.Context, opts ...grpc.CallOption) (StaffServer_UpdateStaffDetailedServicesClient, error)
	// 更新员工教练信息
	UpdateStaffCoachServices(ctx context.Context, opts ...grpc.CallOption) (StaffServer_UpdateStaffCoachServicesClient, error)
	// 删除员工服务
	DeleteStaffServices(ctx context.Context, opts ...grpc.CallOption) (StaffServer_DeleteStaffServicesClient, error)
	// 员工账户信息
	GetStaffAccountService(ctx context.Context, opts ...grpc.CallOption) (StaffServer_GetStaffAccountServiceClient, error)
	// 员工账户修改
	UpdateStaffAccountService(ctx context.Context, opts ...grpc.CallOption) (StaffServer_UpdateStaffAccountServiceClient, error)
	// 员工职位信息
	GetStaffPositionService(ctx context.Context, opts ...grpc.CallOption) (StaffServer_GetStaffPositionServiceClient, error)
	// 员工职位信息保存
	StoreStaffPositionService(ctx context.Context, opts ...grpc.CallOption) (StaffServer_StoreStaffPositionServiceClient, error)
}

type staffServerClient struct {
	cc *grpc.ClientConn
}

func NewStaffServerClient(cc *grpc.ClientConn) StaffServerClient {
	return &staffServerClient{cc}
}

func (c *staffServerClient) GetStaffInfo(ctx context.Context, opts ...grpc.CallOption) (StaffServer_GetStaffInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StaffServer_serviceDesc.Streams[0], "/staff.StaffServer/GetStaffInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &staffServerGetStaffInfoClient{stream}
	return x, nil
}

type StaffServer_GetStaffInfoClient interface {
	Send(*StaffInfoRequest) error
	Recv() (*StaffInfoResponse, error)
	grpc.ClientStream
}

type staffServerGetStaffInfoClient struct {
	grpc.ClientStream
}

func (x *staffServerGetStaffInfoClient) Send(m *StaffInfoRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *staffServerGetStaffInfoClient) Recv() (*StaffInfoResponse, error) {
	m := new(StaffInfoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *staffServerClient) CreateStaffServices(ctx context.Context, opts ...grpc.CallOption) (StaffServer_CreateStaffServicesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StaffServer_serviceDesc.Streams[1], "/staff.StaffServer/CreateStaffServices", opts...)
	if err != nil {
		return nil, err
	}
	x := &staffServerCreateStaffServicesClient{stream}
	return x, nil
}

type StaffServer_CreateStaffServicesClient interface {
	Send(*StaffRequest) error
	Recv() (*CreateStaffResponse, error)
	grpc.ClientStream
}

type staffServerCreateStaffServicesClient struct {
	grpc.ClientStream
}

func (x *staffServerCreateStaffServicesClient) Send(m *StaffRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *staffServerCreateStaffServicesClient) Recv() (*CreateStaffResponse, error) {
	m := new(CreateStaffResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *staffServerClient) UpdateStaffServices(ctx context.Context, opts ...grpc.CallOption) (StaffServer_UpdateStaffServicesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StaffServer_serviceDesc.Streams[2], "/staff.StaffServer/UpdateStaffServices", opts...)
	if err != nil {
		return nil, err
	}
	x := &staffServerUpdateStaffServicesClient{stream}
	return x, nil
}

type StaffServer_UpdateStaffServicesClient interface {
	Send(*StaffRequest) error
	Recv() (*StaffResponse, error)
	grpc.ClientStream
}

type staffServerUpdateStaffServicesClient struct {
	grpc.ClientStream
}

func (x *staffServerUpdateStaffServicesClient) Send(m *StaffRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *staffServerUpdateStaffServicesClient) Recv() (*StaffResponse, error) {
	m := new(StaffResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *staffServerClient) UpdateStaffDetailedServices(ctx context.Context, opts ...grpc.CallOption) (StaffServer_UpdateStaffDetailedServicesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StaffServer_serviceDesc.Streams[3], "/staff.StaffServer/UpdateStaffDetailedServices", opts...)
	if err != nil {
		return nil, err
	}
	x := &staffServerUpdateStaffDetailedServicesClient{stream}
	return x, nil
}

type StaffServer_UpdateStaffDetailedServicesClient interface {
	Send(*StaffRequest) error
	Recv() (*StaffResponse, error)
	grpc.ClientStream
}

type staffServerUpdateStaffDetailedServicesClient struct {
	grpc.ClientStream
}

func (x *staffServerUpdateStaffDetailedServicesClient) Send(m *StaffRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *staffServerUpdateStaffDetailedServicesClient) Recv() (*StaffResponse, error) {
	m := new(StaffResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *staffServerClient) UpdateStaffCoachServices(ctx context.Context, opts ...grpc.CallOption) (StaffServer_UpdateStaffCoachServicesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StaffServer_serviceDesc.Streams[4], "/staff.StaffServer/UpdateStaffCoachServices", opts...)
	if err != nil {
		return nil, err
	}
	x := &staffServerUpdateStaffCoachServicesClient{stream}
	return x, nil
}

type StaffServer_UpdateStaffCoachServicesClient interface {
	Send(*StaffRequest) error
	Recv() (*StaffResponse, error)
	grpc.ClientStream
}

type staffServerUpdateStaffCoachServicesClient struct {
	grpc.ClientStream
}

func (x *staffServerUpdateStaffCoachServicesClient) Send(m *StaffRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *staffServerUpdateStaffCoachServicesClient) Recv() (*StaffResponse, error) {
	m := new(StaffResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *staffServerClient) DeleteStaffServices(ctx context.Context, opts ...grpc.CallOption) (StaffServer_DeleteStaffServicesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StaffServer_serviceDesc.Streams[5], "/staff.StaffServer/DeleteStaffServices", opts...)
	if err != nil {
		return nil, err
	}
	x := &staffServerDeleteStaffServicesClient{stream}
	return x, nil
}

type StaffServer_DeleteStaffServicesClient interface {
	Send(*StaffInfoRequest) error
	Recv() (*StaffResponse, error)
	grpc.ClientStream
}

type staffServerDeleteStaffServicesClient struct {
	grpc.ClientStream
}

func (x *staffServerDeleteStaffServicesClient) Send(m *StaffInfoRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *staffServerDeleteStaffServicesClient) Recv() (*StaffResponse, error) {
	m := new(StaffResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *staffServerClient) GetStaffAccountService(ctx context.Context, opts ...grpc.CallOption) (StaffServer_GetStaffAccountServiceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StaffServer_serviceDesc.Streams[6], "/staff.StaffServer/GetStaffAccountService", opts...)
	if err != nil {
		return nil, err
	}
	x := &staffServerGetStaffAccountServiceClient{stream}
	return x, nil
}

type StaffServer_GetStaffAccountServiceClient interface {
	Send(*StaffInfoRequest) error
	Recv() (*StaffAccountResponse, error)
	grpc.ClientStream
}

type staffServerGetStaffAccountServiceClient struct {
	grpc.ClientStream
}

func (x *staffServerGetStaffAccountServiceClient) Send(m *StaffInfoRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *staffServerGetStaffAccountServiceClient) Recv() (*StaffAccountResponse, error) {
	m := new(StaffAccountResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *staffServerClient) UpdateStaffAccountService(ctx context.Context, opts ...grpc.CallOption) (StaffServer_UpdateStaffAccountServiceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StaffServer_serviceDesc.Streams[7], "/staff.StaffServer/UpdateStaffAccountService", opts...)
	if err != nil {
		return nil, err
	}
	x := &staffServerUpdateStaffAccountServiceClient{stream}
	return x, nil
}

type StaffServer_UpdateStaffAccountServiceClient interface {
	Send(*StaffBankRequest) error
	Recv() (*StaffResponse, error)
	grpc.ClientStream
}

type staffServerUpdateStaffAccountServiceClient struct {
	grpc.ClientStream
}

func (x *staffServerUpdateStaffAccountServiceClient) Send(m *StaffBankRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *staffServerUpdateStaffAccountServiceClient) Recv() (*StaffResponse, error) {
	m := new(StaffResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *staffServerClient) GetStaffPositionService(ctx context.Context, opts ...grpc.CallOption) (StaffServer_GetStaffPositionServiceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StaffServer_serviceDesc.Streams[8], "/staff.StaffServer/GetStaffPositionService", opts...)
	if err != nil {
		return nil, err
	}
	x := &staffServerGetStaffPositionServiceClient{stream}
	return x, nil
}

type StaffServer_GetStaffPositionServiceClient interface {
	Send(*StaffInfoRequest) error
	Recv() (*StaffPositionResponse, error)
	grpc.ClientStream
}

type staffServerGetStaffPositionServiceClient struct {
	grpc.ClientStream
}

func (x *staffServerGetStaffPositionServiceClient) Send(m *StaffInfoRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *staffServerGetStaffPositionServiceClient) Recv() (*StaffPositionResponse, error) {
	m := new(StaffPositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *staffServerClient) StoreStaffPositionService(ctx context.Context, opts ...grpc.CallOption) (StaffServer_StoreStaffPositionServiceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StaffServer_serviceDesc.Streams[9], "/staff.StaffServer/StoreStaffPositionService", opts...)
	if err != nil {
		return nil, err
	}
	x := &staffServerStoreStaffPositionServiceClient{stream}
	return x, nil
}

type StaffServer_StoreStaffPositionServiceClient interface {
	Send(*StaffPositionRequest) error
	Recv() (*StaffResponse, error)
	grpc.ClientStream
}

type staffServerStoreStaffPositionServiceClient struct {
	grpc.ClientStream
}

func (x *staffServerStoreStaffPositionServiceClient) Send(m *StaffPositionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *staffServerStoreStaffPositionServiceClient) Recv() (*StaffResponse, error) {
	m := new(StaffResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StaffServerServer is the server API for StaffServer service.
type StaffServerServer interface {
	// 获取商户员工详情
	GetStaffInfo(StaffServer_GetStaffInfoServer) error
	// 新增员工信息服务
	CreateStaffServices(StaffServer_CreateStaffServicesServer) error
	// 更新员工信息服务
	UpdateStaffServices(StaffServer_UpdateStaffServicesServer) error
	// 更新员工详细信息
	UpdateStaffDetailedServices(StaffServer_UpdateStaffDetailedServicesServer) error
	// 更新员工教练信息
	UpdateStaffCoachServices(StaffServer_UpdateStaffCoachServicesServer) error
	// 删除员工服务
	DeleteStaffServices(StaffServer_DeleteStaffServicesServer) error
	// 员工账户信息
	GetStaffAccountService(StaffServer_GetStaffAccountServiceServer) error
	// 员工账户修改
	UpdateStaffAccountService(StaffServer_UpdateStaffAccountServiceServer) error
	// 员工职位信息
	GetStaffPositionService(StaffServer_GetStaffPositionServiceServer) error
	// 员工职位信息保存
	StoreStaffPositionService(StaffServer_StoreStaffPositionServiceServer) error
}

func RegisterStaffServerServer(s *grpc.Server, srv StaffServerServer) {
	s.RegisterService(&_StaffServer_serviceDesc, srv)
}

func _StaffServer_GetStaffInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StaffServerServer).GetStaffInfo(&staffServerGetStaffInfoServer{stream})
}

type StaffServer_GetStaffInfoServer interface {
	Send(*StaffInfoResponse) error
	Recv() (*StaffInfoRequest, error)
	grpc.ServerStream
}

type staffServerGetStaffInfoServer struct {
	grpc.ServerStream
}

func (x *staffServerGetStaffInfoServer) Send(m *StaffInfoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *staffServerGetStaffInfoServer) Recv() (*StaffInfoRequest, error) {
	m := new(StaffInfoRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StaffServer_CreateStaffServices_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StaffServerServer).CreateStaffServices(&staffServerCreateStaffServicesServer{stream})
}

type StaffServer_CreateStaffServicesServer interface {
	Send(*CreateStaffResponse) error
	Recv() (*StaffRequest, error)
	grpc.ServerStream
}

type staffServerCreateStaffServicesServer struct {
	grpc.ServerStream
}

func (x *staffServerCreateStaffServicesServer) Send(m *CreateStaffResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *staffServerCreateStaffServicesServer) Recv() (*StaffRequest, error) {
	m := new(StaffRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StaffServer_UpdateStaffServices_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StaffServerServer).UpdateStaffServices(&staffServerUpdateStaffServicesServer{stream})
}

type StaffServer_UpdateStaffServicesServer interface {
	Send(*StaffResponse) error
	Recv() (*StaffRequest, error)
	grpc.ServerStream
}

type staffServerUpdateStaffServicesServer struct {
	grpc.ServerStream
}

func (x *staffServerUpdateStaffServicesServer) Send(m *StaffResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *staffServerUpdateStaffServicesServer) Recv() (*StaffRequest, error) {
	m := new(StaffRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StaffServer_UpdateStaffDetailedServices_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StaffServerServer).UpdateStaffDetailedServices(&staffServerUpdateStaffDetailedServicesServer{stream})
}

type StaffServer_UpdateStaffDetailedServicesServer interface {
	Send(*StaffResponse) error
	Recv() (*StaffRequest, error)
	grpc.ServerStream
}

type staffServerUpdateStaffDetailedServicesServer struct {
	grpc.ServerStream
}

func (x *staffServerUpdateStaffDetailedServicesServer) Send(m *StaffResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *staffServerUpdateStaffDetailedServicesServer) Recv() (*StaffRequest, error) {
	m := new(StaffRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StaffServer_UpdateStaffCoachServices_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StaffServerServer).UpdateStaffCoachServices(&staffServerUpdateStaffCoachServicesServer{stream})
}

type StaffServer_UpdateStaffCoachServicesServer interface {
	Send(*StaffResponse) error
	Recv() (*StaffRequest, error)
	grpc.ServerStream
}

type staffServerUpdateStaffCoachServicesServer struct {
	grpc.ServerStream
}

func (x *staffServerUpdateStaffCoachServicesServer) Send(m *StaffResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *staffServerUpdateStaffCoachServicesServer) Recv() (*StaffRequest, error) {
	m := new(StaffRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StaffServer_DeleteStaffServices_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StaffServerServer).DeleteStaffServices(&staffServerDeleteStaffServicesServer{stream})
}

type StaffServer_DeleteStaffServicesServer interface {
	Send(*StaffResponse) error
	Recv() (*StaffInfoRequest, error)
	grpc.ServerStream
}

type staffServerDeleteStaffServicesServer struct {
	grpc.ServerStream
}

func (x *staffServerDeleteStaffServicesServer) Send(m *StaffResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *staffServerDeleteStaffServicesServer) Recv() (*StaffInfoRequest, error) {
	m := new(StaffInfoRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StaffServer_GetStaffAccountService_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StaffServerServer).GetStaffAccountService(&staffServerGetStaffAccountServiceServer{stream})
}

type StaffServer_GetStaffAccountServiceServer interface {
	Send(*StaffAccountResponse) error
	Recv() (*StaffInfoRequest, error)
	grpc.ServerStream
}

type staffServerGetStaffAccountServiceServer struct {
	grpc.ServerStream
}

func (x *staffServerGetStaffAccountServiceServer) Send(m *StaffAccountResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *staffServerGetStaffAccountServiceServer) Recv() (*StaffInfoRequest, error) {
	m := new(StaffInfoRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StaffServer_UpdateStaffAccountService_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StaffServerServer).UpdateStaffAccountService(&staffServerUpdateStaffAccountServiceServer{stream})
}

type StaffServer_UpdateStaffAccountServiceServer interface {
	Send(*StaffResponse) error
	Recv() (*StaffBankRequest, error)
	grpc.ServerStream
}

type staffServerUpdateStaffAccountServiceServer struct {
	grpc.ServerStream
}

func (x *staffServerUpdateStaffAccountServiceServer) Send(m *StaffResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *staffServerUpdateStaffAccountServiceServer) Recv() (*StaffBankRequest, error) {
	m := new(StaffBankRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StaffServer_GetStaffPositionService_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StaffServerServer).GetStaffPositionService(&staffServerGetStaffPositionServiceServer{stream})
}

type StaffServer_GetStaffPositionServiceServer interface {
	Send(*StaffPositionResponse) error
	Recv() (*StaffInfoRequest, error)
	grpc.ServerStream
}

type staffServerGetStaffPositionServiceServer struct {
	grpc.ServerStream
}

func (x *staffServerGetStaffPositionServiceServer) Send(m *StaffPositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *staffServerGetStaffPositionServiceServer) Recv() (*StaffInfoRequest, error) {
	m := new(StaffInfoRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StaffServer_StoreStaffPositionService_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StaffServerServer).StoreStaffPositionService(&staffServerStoreStaffPositionServiceServer{stream})
}

type StaffServer_StoreStaffPositionServiceServer interface {
	Send(*StaffResponse) error
	Recv() (*StaffPositionRequest, error)
	grpc.ServerStream
}

type staffServerStoreStaffPositionServiceServer struct {
	grpc.ServerStream
}

func (x *staffServerStoreStaffPositionServiceServer) Send(m *StaffResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *staffServerStoreStaffPositionServiceServer) Recv() (*StaffPositionRequest, error) {
	m := new(StaffPositionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _StaffServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "staff.StaffServer",
	HandlerType: (*StaffServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetStaffInfo",
			Handler:       _StaffServer_GetStaffInfo_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "CreateStaffServices",
			Handler:       _StaffServer_CreateStaffServices_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "UpdateStaffServices",
			Handler:       _StaffServer_UpdateStaffServices_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "UpdateStaffDetailedServices",
			Handler:       _StaffServer_UpdateStaffDetailedServices_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "UpdateStaffCoachServices",
			Handler:       _StaffServer_UpdateStaffCoachServices_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "DeleteStaffServices",
			Handler:       _StaffServer_DeleteStaffServices_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetStaffAccountService",
			Handler:       _StaffServer_GetStaffAccountService_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "UpdateStaffAccountService",
			Handler:       _StaffServer_UpdateStaffAccountService_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetStaffPositionService",
			Handler:       _StaffServer_GetStaffPositionService_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "StoreStaffPositionService",
			Handler:       _StaffServer_StoreStaffPositionService_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "staff.proto",
}

func init() { proto.RegisterFile("staff.proto", fileDescriptor_staff_396e9fcfeb9fb2b2) }

var fileDescriptor_staff_396e9fcfeb9fb2b2 = []byte{
	// 2074 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0xdd, 0x72, 0xdb, 0xb8,
	0x15, 0xae, 0xec, 0xd8, 0x8e, 0x0e, 0x25, 0x59, 0x86, 0x9d, 0x98, 0xb1, 0xb3, 0x89, 0xa3, 0xcd,
	0x66, 0xbd, 0xa9, 0x63, 0xb7, 0xda, 0x4e, 0xbb, 0xdd, 0x74, 0xa6, 0xe3, 0xdf, 0x86, 0x99, 0xc4,
	0x71, 0x25, 0x65, 0x3b, 0xed, 0x74, 0x86, 0x4b, 0x13, 0xb0, 0x8d, 0xb1, 0x44, 0xaa, 0x24, 0x65,
	0x59, 0x37, 0x7d, 0x82, 0xed, 0x75, 0xdf, 0xa7, 0x97, 0x7d, 0x8f, 0xbe, 0x42, 0xaf, 0x3b, 0x38,
	0x00, 0x48, 0x90, 0x92, 0xb3, 0xa9, 0x92, 0xdd, 0xde, 0xf4, 0x22, 0x89, 0xf0, 0xe1, 0xe0, 0xc3,
	0xc1, 0xc1, 0xc1, 0xf9, 0x00, 0x06, 0xac, 0x38, 0xf1, 0xce, 0xce, 0xb6, 0xfb, 0x51, 0x98, 0x84,
	0x64, 0x0e, 0x1b, 0x6b, 0x15, 0x3f, 0xec, 0xf5, 0xc2, 0x40, 0x82, 0x8d, 0xef, 0x2c, 0xa8, 0xb4,
	0x05, 0xde, 0x62, 0x7f, 0x19, 0xb0, 0x38, 0x21, 0x5b, 0x30, 0x7f, 0xc1, 0x3c, 0xca, 0x22, 0xbb,
	0xb4, 0x51, 0xda, 0xb4, 0x9a, 0x2b, 0xdb, 0xca, 0x7e, 0x1f, 0xff, 0x79, 0x81, 0x7d, 0x2d, 0x65,
	0x43, 0xee, 0xc1, 0x6d, 0x64, 0x75, 0x39, 0xb5, 0x67, 0x36, 0x4a, 0x9b, 0xd5, 0xd6, 0x02, 0xb6,
	0x1d, 0x4a, 0x3e, 0x01, 0x90, 0x5d, 0x81, 0xd7, 0x63, 0xf6, 0xec, 0x46, 0x69, 0xb3, 0xdc, 0x2a,
	0x23, 0x72, 0xec, 0xf5, 0x18, 0x59, 0x83, 0xdb, 0x01, 0xf7, 0x2f, 0xb1, 0xf3, 0x16, 0x76, 0xa6,
	0x6d, 0x72, 0x17, 0xe6, 0x7b, 0xe1, 0x29, 0xef, 0x32, 0x7b, 0x0e, 0x7b, 0x54, 0x8b, 0xac, 0x43,
	0x59, 0x51, 0x0e, 0x7a, 0xf6, 0xbc, 0x1c, 0x24, 0x19, 0x07, 0x3d, 0x52, 0x87, 0xd9, 0x98, 0x5d,
	0xdb, 0x0b, 0xe8, 0x85, 0xf8, 0x49, 0x56, 0x61, 0x81, 0x53, 0x37, 0x19, 0xf5, 0x99, 0x7d, 0x1b,
	0xd1, 0x79, 0x4e, 0x3b, 0xa3, 0x3e, 0x23, 0x77, 0x60, 0x9e, 0x53, 0x24, 0x29, 0x23, 0xc9, 0x1c,
	0xa7, 0x82, 0xe1, 0x11, 0x54, 0x86, 0x61, 0x74, 0xc9, 0x83, 0x73, 0xb7, 0x1f, 0xc6, 0x89, 0x0d,
	0xd8, 0x69, 0x29, 0xec, 0x24, 0x8c, 0x13, 0xe1, 0x35, 0xa7, 0x2c, 0x48, 0x78, 0x32, 0xb2, 0xad,
	0x8d, 0xd9, 0xcd, 0xb9, 0x56, 0xda, 0x26, 0x8f, 0xa1, 0xe6, 0x87, 0x9e, 0x7f, 0xe1, 0x76, 0xd9,
	0x15, 0xeb, 0x8a, 0x88, 0x54, 0x70, 0xd6, 0x0a, 0xa2, 0xaf, 0x04, 0xe8, 0x50, 0xf2, 0x10, 0xac,
	0xc0, 0x4b, 0x06, 0x11, 0x73, 0x05, 0xaf, 0x5d, 0x45, 0x13, 0x90, 0xd0, 0x1f, 0xc2, 0xe8, 0x52,
	0xc4, 0x8d, 0x05, 0x49, 0x34, 0x72, 0xa9, 0x97, 0x30, 0xbb, 0xb6, 0x51, 0xda, 0x9c, 0x6b, 0x95,
	0x11, 0x39, 0xf0, 0x12, 0x26, 0x16, 0x15, 0x5f, 0x84, 0x7d, 0x41, 0xbf, 0xb8, 0x31, 0x2b, 0x16,
	0x25, 0x9a, 0x0e, 0x25, 0x9f, 0x42, 0x95, 0xc7, 0x6e, 0x9f, 0x45, 0x3d, 0x1e, 0xc7, 0x3c, 0x0c,
	0xec, 0xba, 0x9c, 0x9d, 0xc7, 0x27, 0x29, 0x46, 0xbe, 0x80, 0xfa, 0x79, 0xe4, 0xd1, 0x81, 0x97,
	0x30, 0xea, 0xc6, 0xfe, 0x45, 0x18, 0x76, 0xed, 0x25, 0x5c, 0xe6, 0x62, 0x8a, 0xb7, 0x11, 0x26,
	0x9f, 0x83, 0x86, 0x78, 0x18, 0xb8, 0x09, 0xef, 0x31, 0x9b, 0xa0, 0x33, 0xb5, 0x0c, 0xee, 0xf0,
	0x1e, 0x23, 0xf7, 0xa1, 0xcc, 0xe8, 0xc0, 0x47, 0xc0, 0x5e, 0xc6, 0x49, 0x33, 0x80, 0x3c, 0x00,
	0xe8, 0x47, 0xe1, 0x19, 0x93, 0x3e, 0xad, 0xe0, 0x5c, 0x06, 0x22, 0x22, 0x7a, 0xca, 0xa3, 0xe4,
	0x82, 0x7a, 0x23, 0xfb, 0x8e, 0xdc, 0x52, 0xdd, 0x16, 0x1b, 0x12, 0x78, 0x09, 0xbf, 0x62, 0x6e,
	0xbf, 0xeb, 0xf9, 0xcc, 0xbe, 0x2b, 0x37, 0x44, 0x62, 0x27, 0x02, 0x12, 0x26, 0x3d, 0x2f, 0x8a,
	0x46, 0x6e, 0x9c, 0x78, 0xc9, 0x20, 0xb6, 0x57, 0x71, 0x7e, 0x0b, 0xb1, 0x36, 0x42, 0x62, 0x21,
	0xfe, 0x05, 0xef, 0xd2, 0x88, 0x05, 0xda, 0xca, 0x46, 0xab, 0x9a, 0x86, 0x95, 0xe1, 0x43, 0xb0,
	0xfa, 0x51, 0x78, 0xc5, 0x03, 0x9f, 0x89, 0xf0, 0xde, 0x93, 0x5b, 0xa3, 0x21, 0x19, 0xe2, 0xd4,
	0x00, 0x13, 0x77, 0x0d, 0x1d, 0xaa, 0x68, 0x10, 0x13, 0x7b, 0x15, 0x16, 0x7c, 0x9e, 0x8c, 0x04,
	0xc3, 0xba, 0xcc, 0x3a, 0xd1, 0x74, 0xa8, 0xc8, 0x5e, 0xec, 0xc0, 0x91, 0xf7, 0xe5, 0x52, 0x05,
	0x80, 0xa3, 0x1e, 0x82, 0x45, 0x79, 0x9c, 0x44, 0xdc, 0x4f, 0xc4, 0xc8, 0x4f, 0xe4, 0xdc, 0x1a,
	0x92, 0x73, 0xa7, 0x06, 0xc8, 0xf0, 0x40, 0xce, 0xad, 0x41, 0x64, 0xb1, 0x61, 0xc1, 0xa3, 0x34,
	0x62, 0x71, 0x6c, 0x3f, 0xc4, 0x6e, 0xdd, 0x24, 0x1b, 0x60, 0x51, 0x16, 0xfb, 0x11, 0xef, 0xe3,
	0x36, 0x6d, 0xc8, 0x48, 0x1a, 0x90, 0x08, 0x13, 0xeb, 0xf5, 0xbb, 0xe1, 0xa8, 0xc7, 0x82, 0x44,
	0xee, 0xf7, 0x23, 0xb9, 0xdf, 0x19, 0x8c, 0xfb, 0xfd, 0x08, 0x2a, 0x71, 0x9f, 0xf9, 0xdc, 0xeb,
	0xca, 0x55, 0x36, 0x30, 0x0d, 0xad, 0x14, 0x73, 0x28, 0x79, 0x06, 0xc4, 0x67, 0x51, 0xc2, 0xcf,
	0xb8, 0xcc, 0x02, 0xe9, 0xf1, 0xa7, 0x1b, 0xb3, 0x9b, 0xe5, 0xd6, 0x52, 0xae, 0x07, 0xdd, 0x6e,
	0x40, 0x85, 0x07, 0x49, 0x14, 0xd2, 0x81, 0x8f, 0xde, 0x3d, 0x96, 0x4b, 0x33, 0x31, 0x3c, 0xcc,
	0xb1, 0x1b, 0x5f, 0x84, 0x43, 0xfb, 0x33, 0x75, 0x98, 0xe3, 0xf6, 0x45, 0x38, 0x14, 0x25, 0xc8,
	0xeb, 0x9e, 0x0e, 0x7a, 0xc2, 0x95, 0x27, 0xb2, 0x04, 0x61, 0xdb, 0xa1, 0xa2, 0xeb, 0x34, 0xf2,
	0x02, 0x2a, 0xba, 0x3e, 0x97, 0x5d, 0xd8, 0x76, 0xa8, 0x58, 0x84, 0x3f, 0x88, 0x22, 0xb1, 0x54,
	0x71, 0x7e, 0xec, 0x2f, 0x64, 0xde, 0x28, 0xac, 0x7d, 0x11, 0xf6, 0xc9, 0x13, 0x58, 0xf4, 0xc3,
	0x01, 0x1e, 0x45, 0x3f, 0xa4, 0x98, 0x12, 0x4f, 0xd1, 0xaa, 0xaa, 0xe0, 0xfd, 0x90, 0x8a, 0xac,
	0x10, 0x41, 0xf7, 0x11, 0xb2, 0x7f, 0xaa, 0x82, 0x2e, 0x9b, 0x22, 0xb7, 0xfb, 0x5e, 0x1c, 0x0f,
	0xc3, 0x88, 0xda, 0x5b, 0x72, 0xc3, 0x75, 0x9b, 0xac, 0xc0, 0x1c, 0xeb, 0x79, 0xbc, 0x6b, 0x3f,
	0x93, 0x25, 0x08, 0x1b, 0x8d, 0xdf, 0x42, 0x55, 0x55, 0xe3, 0xb8, 0x1f, 0x06, 0x31, 0x23, 0xdb,
	0x30, 0xaf, 0x72, 0x56, 0x96, 0xe3, 0xbb, 0xba, 0x1c, 0xef, 0x0d, 0x62, 0x1e, 0xb0, 0x38, 0x96,
	0xb9, 0xdb, 0x52, 0x56, 0x8d, 0x6f, 0x61, 0x79, 0x3f, 0x62, 0x5e, 0xc2, 0x3e, 0x88, 0xe6, 0x1d,
	0x75, 0xbd, 0xf1, 0x57, 0xa8, 0x23, 0xb7, 0x13, 0x9c, 0x85, 0x1f, 0x5d, 0x34, 0x8a, 0xdb, 0x32,
	0x3b, 0xb6, 0x2d, 0x8d, 0xbf, 0x2d, 0xc2, 0x92, 0xe1, 0xc0, 0x47, 0x5f, 0xe0, 0x8f, 0x2e, 0x5c,
	0x5b, 0xba, 0x53, 0xcb, 0x97, 0xd5, 0x5c, 0xdc, 0x96, 0xc2, 0x8d, 0xeb, 0x6c, 0xb3, 0x6b, 0x65,
	0xdd, 0x66, 0xd7, 0x64, 0x2b, 0x2f, 0x6a, 0x56, 0x73, 0x59, 0xd9, 0x3a, 0xa8, 0x6d, 0x2d, 0x16,
	0x0f, 0xba, 0xc9, 0x47, 0x50, 0xba, 0x9f, 0x17, 0x94, 0xce, 0x6a, 0xde, 0x49, 0x27, 0x92, 0xb0,
	0x9a, 0x2a, 0x13, 0xc0, 0x5f, 0x4d, 0x14, 0x40, 0xab, 0xb9, 0xa4, 0x06, 0xee, 0xa7, 0x3a, 0x58,
	0xd0, 0xc4, 0xaf, 0xc6, 0x35, 0xd1, 0x6a, 0xae, 0xaa, 0x51, 0xc7, 0xa9, 0x34, 0xaa, 0x09, 0xff,
	0x0b, 0xb1, 0x7c, 0x9a, 0x17, 0xcb, 0xcc, 0x15, 0x91, 0x49, 0x3a, 0x54, 0x4a, 0x3f, 0x7f, 0x33,
	0x49, 0x3f, 0x33, 0x37, 0x32, 0x11, 0x55, 0xe3, 0x7e, 0x78, 0x61, 0xfd, 0x45, 0x51, 0x58, 0x45,
	0x5a, 0x4b, 0x6f, 0x0e, 0x35, 0xae, 0x9c, 0xf9, 0xf1, 0x04, 0xf7, 0xf9, 0x04, 0xc1, 0xb5, 0x9a,
	0xb6, 0xf2, 0xeb, 0x75, 0xa6, 0xbb, 0xca, 0xb3, 0x9c, 0x14, 0x1f, 0x4c, 0x96, 0x62, 0xab, 0xb9,
	0xae, 0x53, 0x24, 0xa7, 0xc8, 0x8a, 0xe2, 0xff, 0x3a, 0x3d, 0x95, 0x4e, 0x3f, 0x9f, 0xa0, 0xd3,
	0xd9, 0x4e, 0xb5, 0x33, 0xb9, 0xd6, 0x3b, 0x65, 0x2a, 0xf8, 0xeb, 0x1b, 0x15, 0xdc, 0x6a, 0x3e,
	0xd0, 0x9b, 0x55, 0x14, 0x72, 0x45, 0x34, 0xa5, 0xc2, 0x3f, 0xc9, 0x2b, 0xbc, 0xd5, 0xac, 0xea,
	0x82, 0x83, 0x42, 0x9f, 0x0a, 0xfe, 0xd7, 0x50, 0xe3, 0x3d, 0xef, 0x9c, 0x89, 0xb3, 0x1a, 0x87,
	0x81, 0xd7, 0xb5, 0x9f, 0xa0, 0x5b, 0x69, 0x21, 0x14, 0x9d, 0x3a, 0x77, 0xaa, 0x68, 0x7a, 0xa2,
	0x2c, 0x3f, 0xf0, 0x46, 0xf0, 0xf5, 0xe4, 0x1b, 0x81, 0xd5, 0x24, 0x69, 0x85, 0x4b, 0x2f, 0x06,
	0xc5, 0x5b, 0xc2, 0x57, 0x50, 0x91, 0x5e, 0x7b, 0x57, 0x5e, 0xe2, 0x45, 0x78, 0x55, 0xc8, 0x6a,
	0xea, 0x2e, 0x82, 0xd9, 0x56, 0xa0, 0xa9, 0x04, 0x49, 0x13, 0x40, 0x8e, 0x3c, 0x13, 0x47, 0x72,
	0x2b, 0x57, 0xf4, 0x8f, 0x3c, 0x91, 0xf0, 0xba, 0x08, 0xa0, 0x99, 0x80, 0x44, 0x45, 0x15, 0xa5,
	0x54, 0x1f, 0xb2, 0x67, 0xb9, 0x52, 0x26, 0x2a, 0x67, 0xee, 0x80, 0xc1, 0x30, 0x45, 0x72, 0xd7,
	0xa9, 0xed, 0xfc, 0x75, 0x2a, 0xbd, 0xb2, 0xec, 0x98, 0x57, 0x96, 0x5f, 0xc3, 0x6d, 0x2d, 0x53,
	0xa8, 0xaa, 0xec, 0x5a, 0xaa, 0x53, 0x49, 0xa9, 0x2a, 0xbb, 0x46, 0x25, 0x22, 0x70, 0x0b, 0x53,
	0x68, 0x06, 0xc7, 0xe2, 0xef, 0xc6, 0x1b, 0xb0, 0x8c, 0x88, 0x89, 0x62, 0xae, 0xc3, 0xcb, 0xa9,
	0x1a, 0x5f, 0x56, 0x88, 0xda, 0x20, 0x23, 0xfa, 0x4a, 0xb6, 0x2d, 0x23, 0xcc, 0x0d, 0x07, 0x6a,
	0x79, 0x75, 0xc2, 0x57, 0x91, 0x42, 0x4c, 0xb7, 0x2a, 0x1a, 0xbc, 0xd1, 0xb7, 0x97, 0x00, 0x99,
	0x5e, 0x91, 0x4d, 0xa8, 0x9b, 0xd2, 0x66, 0x30, 0xd5, 0x32, 0x25, 0xbb, 0x91, 0xeb, 0x97, 0x50,
	0x31, 0xd5, 0x59, 0xd8, 0x18, 0x0c, 0xf8, 0x7b, 0xe2, 0xb8, 0x3d, 0x80, 0x4c, 0xa8, 0xcc, 0x97,
	0x9f, 0x1c, 0xa8, 0x95, 0x4b, 0xdc, 0x2e, 0x44, 0x87, 0x31, 0xfe, 0xb6, 0x00, 0xc4, 0xc9, 0x6b,
	0xb8, 0xb0, 0x58, 0x10, 0x0b, 0xf2, 0x19, 0xd4, 0x52, 0xb9, 0x30, 0x97, 0x52, 0x4d, 0x51, 0x5c,
	0x49, 0xce, 0xcc, 0xe0, 0xce, 0xcc, 0x70, 0x82, 0xdf, 0xc3, 0xd2, 0x58, 0xd5, 0x17, 0x5b, 0x29,
	0x55, 0xc2, 0xa0, 0x2f, 0x23, 0x82, 0xd4, 0x69, 0xb7, 0x41, 0x2b, 0xbb, 0x91, 0xf2, 0x5b, 0x58,
	0x99, 0x24, 0x04, 0x62, 0x33, 0x53, 0xf9, 0x30, 0x37, 0x53, 0x83, 0xc8, 0x6d, 0x1a, 0x19, 0xf4,
	0xa9, 0x11, 0xce, 0xe0, 0xc1, 0xd2, 0x58, 0x01, 0x14, 0x0b, 0xce, 0x0a, 0xa6, 0x19, 0x97, 0x14,
	0xd5, 0x71, 0xc9, 0xcc, 0xcc, 0xb8, 0xa4, 0x28, 0x4e, 0x31, 0x84, 0xd5, 0x1b, 0x0a, 0xe4, 0xf8,
	0xf3, 0xc8, 0x98, 0x2c, 0x5f, 0x3c, 0x71, 0xc2, 0xc9, 0xaf, 0x29, 0x39, 0xe9, 0x78, 0xad, 0x6d,
	0x1c, 0x41, 0xc5, 0x2c, 0x81, 0xe2, 0x50, 0xca, 0xfa, 0x91, 0x26, 0xce, 0x02, 0xb6, 0x65, 0xe6,
	0xc8, 0xae, 0x41, 0xd4, 0xd5, 0x99, 0x83, 0xc0, 0xdb, 0xa8, 0xdb, 0x78, 0x01, 0xb5, 0x7c, 0x59,
	0x9a, 0x9a, 0xe9, 0x08, 0x2a, 0x66, 0xa1, 0xfa, 0x00, 0x8f, 0xea, 0xc5, 0xda, 0x25, 0x4e, 0x05,
	0x56, 0xba, 0xec, 0x54, 0x88, 0xa6, 0x64, 0xc2, 0x0e, 0xf3, 0x54, 0x08, 0x00, 0x63, 0xf4, 0x02,
	0xea, 0xc5, 0x7b, 0xe5, 0x94, 0x4c, 0x14, 0xea, 0xc5, 0xab, 0xa1, 0x90, 0xe8, 0xec, 0x1e, 0x99,
	0x2b, 0x16, 0x19, 0x8c, 0x3b, 0x9b, 0x37, 0x34, 0xf8, 0x0d, 0xc3, 0x63, 0x59, 0x09, 0xe6, 0xa5,
	0x0a, 0xaa, 0xc3, 0x3e, 0x34, 0x59, 0xc5, 0x61, 0x1f, 0x22, 0x9f, 0xee, 0x2c, 0x54, 0x82, 0x21,
	0x72, 0xfc, 0xab, 0x04, 0x2b, 0x58, 0xa9, 0x77, 0xe5, 0xf3, 0x74, 0xea, 0xb7, 0x53, 0xfe, 0x81,
	0x34, 0x53, 0x7c, 0x20, 0x3d, 0x82, 0x8a, 0x7a, 0x00, 0x9b, 0x2f, 0x28, 0x4b, 0x61, 0xfa, 0x16,
	0xe5, 0x7b, 0x11, 0x3e, 0x4c, 0x4e, 0x59, 0xa4, 0x9e, 0x51, 0x20, 0xa0, 0x63, 0x44, 0xc4, 0x42,
	0x4e, 0xbd, 0x40, 0x85, 0x7c, 0x4e, 0xdd, 0x52, 0xbd, 0x00, 0x43, 0x2e, 0xe6, 0xd7, 0x13, 0x70,
	0x8a, 0xcf, 0xa9, 0x6a, 0xab, 0xac, 0x10, 0x87, 0x36, 0xfe, 0x5d, 0x52, 0x2f, 0xd4, 0x3d, 0x2f,
	0xb8, 0xfc, 0x21, 0x5e, 0xa8, 0xff, 0xcb, 0xd5, 0xe5, 0x6e, 0x30, 0x0b, 0xb9, 0x1b, 0x4c, 0xe3,
	0xbb, 0x19, 0xb8, 0x83, 0x0b, 0x3f, 0x09, 0x63, 0xae, 0xea, 0xfd, 0x74, 0x3b, 0x5c, 0x78, 0x90,
	0xcd, 0xbc, 0xff, 0x83, 0xcc, 0x7c, 0x36, 0xce, 0x4e, 0xfb, 0x6c, 0xbc, 0xf5, 0x7e, 0xcf, 0xc6,
	0x7c, 0x1e, 0xce, 0x15, 0xf2, 0xb0, 0xf1, 0x0f, 0x9d, 0xef, 0x59, 0x38, 0x3e, 0x72, 0x2e, 0x14,
	0xbe, 0xe5, 0xce, 0x8e, 0x7d, 0xcb, 0x7d, 0x3c, 0x71, 0x69, 0xc5, 0x4f, 0xc2, 0xe6, 0x47, 0xe5,
	0xb9, 0xfc, 0x47, 0xe5, 0xa7, 0x1c, 0xca, 0x2f, 0xc3, 0x53, 0x75, 0x37, 0x5b, 0x04, 0xab, 0xdd,
	0xd9, 0xed, 0xbc, 0x6d, 0xbb, 0xce, 0xb1, 0xd3, 0xa9, 0xff, 0x84, 0x2c, 0x41, 0xf5, 0xd5, 0xe1,
	0xee, 0x37, 0x87, 0x6e, 0xfb, 0xb0, 0xf5, 0x8d, 0xb3, 0x7f, 0x58, 0x2f, 0x91, 0x1a, 0x80, 0x73,
	0x9c, 0xb6, 0x67, 0xc8, 0x0a, 0xd4, 0x4f, 0x5a, 0xbb, 0xfb, 0x1d, 0x67, 0x3f, 0xb3, 0x9a, 0x25,
	0x04, 0x6a, 0x27, 0xbb, 0xad, 0x8e, 0xdb, 0x71, 0x5e, 0x1f, 0xba, 0x2f, 0xdf, 0xec, 0xb5, 0xeb,
	0xb7, 0x9e, 0x7e, 0x09, 0x65, 0x0c, 0x17, 0x56, 0x92, 0x65, 0x58, 0x6c, 0x77, 0x76, 0x8f, 0x8e,
	0xdc, 0xce, 0x1f, 0x4f, 0x0e, 0x8d, 0xe9, 0x76, 0x0f, 0x5e, 0x3b, 0xc7, 0x4e, 0xbb, 0xd3, 0xda,
	0xed, 0xbc, 0x69, 0xd5, 0x4b, 0xcd, 0xbf, 0xcf, 0x83, 0xa5, 0xae, 0x7f, 0xd1, 0x15, 0x8b, 0xc8,
	0x21, 0x54, 0x7e, 0xc7, 0x92, 0xf4, 0xfb, 0x0c, 0x59, 0x35, 0xbf, 0x64, 0x18, 0x9f, 0x8c, 0xd6,
	0xec, 0xf1, 0x0e, 0x99, 0xac, 0x9b, 0xa5, 0x9f, 0x95, 0xc8, 0xcb, 0xdc, 0x67, 0x2c, 0xc1, 0xcd,
	0x7d, 0x16, 0x93, 0x65, 0x73, 0x90, 0x66, 0x5a, 0xd3, 0x79, 0x32, 0xfe, 0xdd, 0x0b, 0xb9, 0x0e,
	0x60, 0xf9, 0x6d, 0x9f, 0xbe, 0x1f, 0xd7, 0x4a, 0x1e, 0x34, 0x58, 0x5e, 0xc1, 0xba, 0xc1, 0x72,
	0xc0, 0x12, 0x8f, 0x77, 0x19, 0x9d, 0x96, 0xcd, 0x01, 0xdb, 0x60, 0xc3, 0x0c, 0x9f, 0x96, 0xea,
	0x05, 0x2c, 0x1f, 0xb0, 0x2e, 0x2b, 0x2e, 0xef, 0xc6, 0xc0, 0xdf, 0xcc, 0xd4, 0x82, 0xbb, 0x7a,
	0xef, 0x94, 0x44, 0x28, 0xb6, 0x9b, 0xc9, 0xd6, 0xcd, 0x8e, 0x82, 0xae, 0x20, 0xe7, 0x31, 0xdc,
	0x33, 0x16, 0xfa, 0x2e, 0x5a, 0xa3, 0x5a, 0xbf, 0xc3, 0xc7, 0x0e, 0xac, 0x6a, 0x1f, 0xf5, 0xb1,
	0xfe, 0x5e, 0x27, 0xef, 0x9b, 0x1d, 0xc5, 0xda, 0xa8, 0x56, 0x7e, 0xaf, 0x9d, 0x84, 0x11, 0x9b,
	0xc8, 0xbb, 0x3e, 0x79, 0xf8, 0xf7, 0x78, 0xba, 0xb7, 0xf7, 0xa7, 0x9d, 0x73, 0x9e, 0x74, 0xbd,
	0xd3, 0xed, 0x38, 0x19, 0xd1, 0x6d, 0x3f, 0xd8, 0x19, 0x24, 0xa1, 0xf8, 0xf3, 0x2c, 0xa6, 0x97,
	0x3b, 0xe7, 0xe1, 0x0e, 0xfe, 0x07, 0xdc, 0x0e, 0x0e, 0x7f, 0x8e, 0x7f, 0xff, 0x73, 0xa6, 0xf6,
	0x36, 0x09, 0x4f, 0x04, 0xfc, 0x67, 0xe4, 0x3b, 0x9d, 0x47, 0x9b, 0x2f, 0xff, 0x13, 0x00, 0x00,
	0xff, 0xff, 0xe5, 0x90, 0x34, 0x0b, 0xc8, 0x1b, 0x00, 0x00,
}
