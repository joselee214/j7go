// Code generated by protoc-gen-go. DO NOT EDIT.
// source: image_errors.proto

package business_errors

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ImagesError int32

const (
	// 初始值, 无意义
	ImagesError_INIT ImagesError = 0
	// 获取图片信息失败
	ImagesError_GET_IMAGES_ERROR ImagesError = 60700
	// 更新图片信息失败
	ImagesError_UPDATE_IMAGES_ERROR ImagesError = 60701
	// 新增图片失败
	ImagesError_INSERT_IMAGES_ERROR ImagesError = 60702
	// 删除图片失败
	ImagesError_DELETE_IMAGE_ERROR ImagesError = 60703
	// 新增相册失败
	ImagesError_INSERT_ALBUM_ERROR ImagesError = 60704
)

var ImagesError_name = map[int32]string{
	0:     "INIT",
	60700: "GET_IMAGES_ERROR",
	60701: "UPDATE_IMAGES_ERROR",
	60702: "INSERT_IMAGES_ERROR",
	60703: "DELETE_IMAGE_ERROR",
	60704: "INSERT_ALBUM_ERROR",
}
var ImagesError_value = map[string]int32{
	"INIT":                0,
	"GET_IMAGES_ERROR":    60700,
	"UPDATE_IMAGES_ERROR": 60701,
	"INSERT_IMAGES_ERROR": 60702,
	"DELETE_IMAGE_ERROR":  60703,
	"INSERT_ALBUM_ERROR":  60704,
}

func (x ImagesError) String() string {
	return proto.EnumName(ImagesError_name, int32(x))
}
func (ImagesError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_image_errors_c681eedf890e480f, []int{0}
}

func init() {
	proto.RegisterEnum("images.ImagesError", ImagesError_name, ImagesError_value)
}

func init() { proto.RegisterFile("image_errors.proto", fileDescriptor_image_errors_c681eedf890e480f) }

var fileDescriptor_image_errors_c681eedf890e480f = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0xcc, 0x4d, 0x4c,
	0x4f, 0x8d, 0x4f, 0x2d, 0x2a, 0xca, 0x2f, 0x2a, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x03, 0x8b, 0x15, 0x6b, 0xcd, 0x64, 0xe4, 0xe2, 0xf6, 0x04, 0x33, 0x5d, 0x41, 0xd2, 0x42, 0x1c,
	0x5c, 0x2c, 0x9e, 0x7e, 0x9e, 0x21, 0x02, 0x0c, 0x42, 0x62, 0x5c, 0x02, 0xee, 0xae, 0x21, 0xf1,
	0x9e, 0xbe, 0x8e, 0xee, 0xae, 0xc1, 0xf1, 0xae, 0x41, 0x41, 0xfe, 0x41, 0x02, 0x73, 0x6e, 0x31,
	0x0b, 0x49, 0x72, 0x09, 0x87, 0x06, 0xb8, 0x38, 0x86, 0xb8, 0xa2, 0x4a, 0xcd, 0x85, 0x48, 0x79,
	0xfa, 0x05, 0xbb, 0x06, 0xa1, 0xe9, 0x9a, 0x77, 0x8b, 0x59, 0x48, 0x82, 0x4b, 0xc8, 0xc5, 0xd5,
	0xc7, 0x15, 0xa6, 0x0b, 0x2a, 0x33, 0x1f, 0x22, 0x03, 0xd5, 0xe4, 0xe8, 0xe3, 0x14, 0xea, 0x0b,
	0x95, 0x59, 0x70, 0x8b, 0xd9, 0x49, 0x23, 0x8a, 0x3f, 0xa9, 0xb4, 0x38, 0x33, 0x2f, 0xb5, 0xb8,
	0x18, 0xea, 0xf8, 0x53, 0x4c, 0x22, 0xa1, 0x25, 0xf9, 0xae, 0x15, 0xc9, 0xa9, 0x05, 0x25, 0x99,
	0xf9, 0x79, 0xc5, 0x31, 0x10, 0xa7, 0x27, 0xb1, 0x81, 0x3d, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0xbe, 0x08, 0x1a, 0x0d, 0xea, 0x00, 0x00, 0x00,
}
